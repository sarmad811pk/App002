@using SurveyApp.Models;
@{
    ViewBag.Title = "ScheduleAddEdit";
    months = ViewData["Months"] != null ? ViewData["Months"].ToString() : "";
    string script= "";
}

@model SurveyApp.Models.Schedule

@functions{
    string months;
    public string getMonthStatus(int monthId)
    {
        if (months != "")
        {
            foreach (string id in months.Split(','))
            {
                if (Convert.ToInt32(id) == monthId)
                {
                    return "checked='checked'";
                }
            }
        }

        return "";
    }
}

<script src="~/Scripts/bootbox.min.js"></script>
<h2><a href="javascript:void(0);" id="back" class="btnBack"></a> &nbsp;Schedule Information Editor</h2>

<style>
    ._panel {
        background: #fafafa;
        border: solid 1px #cccccc;
        padding: 10px;
        border-radius: 6px;
    }

    .msg.green {
        color: #00cc00;
        margin: 0px 0px 6px 0px;
    }

    .msg.red {
        color: #cc0000;
        margin: 0px 0px 6px 0px;
    }
    .ui-tooltip {min-width:483px; max-width: 500px;background-color: #333; color: #FFF;}
</style>
<br />

@using (Html.BeginForm("ScheduleAddEdit", "Schedule", FormMethod.Post, new { id = "frmAddSchedule", @class = "form-horizontal", style = "width: 700px;padding-left: 24px;" }))
{
    @Html.ValidationSummary();
    @Html.HiddenFor(m => m.Id, new { name = "hdnScheduleId", value = Model.Id })
    <input type="hidden" id="hdnSendEmail" name="hdnSendEmail" value="true" />

    <div class="form-group">
        <label class="control-label col-sm-3">Title:</label>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.Title, new { placeholder = "Enter Title", @class = "form-control" })
        </div>
    </div>
    
    <div class="form-group">
        <label class="control-label col-sm-3">Frequency:</label>
        <div class="col-sm-9">
            <div class="radio-inline"><label>@Html.RadioButtonFor(m => m.Frequency, "1", new { name = "optradio", onclick = "$('#divDays').hide();" })Once</label></div>
            <div class="radio-inline"><label>@Html.RadioButtonFor(m => m.Frequency, "2", new { name = "optradio", onclick = "$('#divDays').show();" })Repeat</label></div>
        </div>
    </div>

    <div id="divDays" class="_panel form-group" style="display:none;">
        <div class="form-group">
            <label class="control-label col-sm-3">Enter Days To Repeat:</label>
            <div class="col-sm-9">
                @Html.TextBoxFor(m => m.DaysToRepeat, new { placeholder = "Enter No. Of Days", type="text", pattern="\\d*", maxlength="3", @class = "form-control" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-sm-3">Active On:</label>
        <div class="col-sm-9">
            <div class="radio-inline"><label>@Html.RadioButtonFor(m => m.ActiveOn, "1", new { name = "optradio", onclick = "$('#divSpecify').hide();" })Enrollment</label></div>
            <div class="radio-inline"><label>@Html.RadioButtonFor(m => m.ActiveOn, "2", new { name = "optradio", onclick = "$('#divSpecify').show();" })Specify</label></div>
        </div>
    </div>

    <div id="divSpecify" class="form-group _panel" style="display:none;">
        <label class="control-label col-sm-3">Specify Period:</label>
        <div class="col-sm-9">
            <div class="specify" data-toggle="tooltip" title="Please note this selection will be applicable for the future dates.">
                <table cellpadding="0" cellspacing="0" style="width:100%;">                    
                    <tr>
                        <td>
                            <div class="monthly">                                
                                @Html.DropDownListFor(m => m.Day, new SelectList(ScheduleDay.GetScheduleDays(), "Id", "Value"), "Select Day", new { id = "ddlDays", @class = "form-control", style = "width: 49%;display: inline-block;", onchange = "setPeriodSpecification(1);" })                                
                                @Html.DropDownListFor(m => m.Month, new SelectList(ScheduleMonth.GetScheduleMonths(), "Id", "Month"), "Select Month", new { id = "ddlMonths", @class = "form-control", style = "width: 49%;display: inline-block;", onchange = "setPeriodSpecification(1);" })
                            </div>
                        </td>
                        <td style="text-align:center;"><b>&nbsp;OR&nbsp;</b></td>
                        <td>
                            <div class="weekly">
                                @Html.DropDownListFor(m => m.Weekday, new SelectList(ScheduleWeekday.GetScheduleWeekdays(), "Id", "Weekday"), "Select Weekday", new { id = "ddlWeekdays", @class = "form-control", onchange = "setPeriodSpecification(2);" })
                            </div>
                        </td>
                    </tr>
                </table>
            </div>


        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-sm-3">Available Until:</label>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.AvailableUntil, new { placeholder = "Enter No. Of Days", type="text", pattern="\\d*", maxlength="3", @class = "form-control" })
        </div>
    </div>
    
    <div class="form-group">
        <label class="control-label col-sm-3">Reminder Frequncey:</label>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.ReminderFrequency, new { placeholder = "Enter No. Of Days", type="text", pattern="\\d*", maxlength="3", @class = "form-control" })
        </div>
    </div>
    
    <div class="form-group">
        <label class="control-label col-sm-3">Last Reminder:</label>
        <div class="col-sm-9">
            @Html.TextBoxFor(m => m.LastReminder, new { placeholder = "Enter No. Of Days", type="text", pattern="\\d*", maxlength="3", @class = "form-control" })
        </div>
    </div>
    
    <div class="form-group">
        <div class="col-sm-offset-3 col-sm-9" style="margin-top:10px;">
            <button type="submit" id="btnSaveSchedule" class="btn btn-default">Save Information</button>
            <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Index", "Schedule")';">Cancel</button>
        </div>
    </div>

}

<script type="text/javascript">
    $(function () {
        $('[data-toggle="tooltip"]').tooltip({
            content: function () {
                return $(this).attr('title').replace(/<br\/>/g, "<br/>");
            },
        });

        $("#frmAddSchedule").find("input[type='radio']").each(function (index, obj) {
            if ($(obj)[0].checked == true) {
                $(obj)[0].click();
                return true;
            }
        });

        @if (Model.Id <= 0)
        {
            script = "$(\"#frmAddSchedule\").find(\"input[type=text]\").val(\"\")";
        }
        @Html.Raw(script);


        $("#btnSaveSchedule").click(function (e) {
            e.preventDefault();
            $('.loading').show();
            $('.disablebackground').show();

            bootbox.dialog({
                message: "Would you like to send “assessment assignment” email to respondents?",
                title: "Email Confirmation",
                closeButton: false,
                onEscape: function () {
                    $("#hdnSendEmail").val(false);
                    $("#frmAddSchedule").submit();
                },
                buttons: {
                    success: {
                        label: "Send",
                        className: "btn-primary",
                        callback: function () {
                            $("#hdnSendEmail").val(true);
                            $("#frmAddSchedule").submit();
                        }
                    },
                    danger: {
                        label: "Don't Send",
                        className: "btn-default",
                        callback: function () {
                            $("#hdnSendEmail").val(false);
                            $("#frmAddSchedule").submit();
                        }
                    }
                }
            });
        });

        $(".btnBack").click(function(){
            bootbox.dialog({
                message: "Would you like to save the changes?",
                title: "Save Changes!",
                closeButton: false,
                onEscape: function() {
                    location.href = "@Url.Action("Index", "Schedule")";
                },
                buttons: {
                    success: {
                        label: "Yes",
                        className: "btn-primary",
                        callback: function() {
                            $("#btnSaveSchedule").click();
                        }
                    },
                    danger: {
                        label: "No",
                        className: "btn-default",
                        callback: function() {
                            location.href = "@Url.Action("Index", "Schedule")";
                        }
                    }
                }
            });
        });
    });

    function setPeriodSpecification(type) {
        if (type == 1) {
            $("#ddlWeekdays").val("");
        }
        if (type == 2) {
            $("#ddlDays").val("");
            $("#ddlMonths").val("");
        }
    }
</script>