@model int?
@{
    var chiildid = Request.QueryString["ChildId"];
    System.Data.DataSet dsSurvey = SurveyApp.DataHelper.SurveyGetByID(Model ?? 1);
    System.Data.DataSet dsQuestions = SurveyApp.DataHelper.QuestionGetbySurveyID(Model ?? 1, Convert.ToInt32(chiildid));
    var qGroup = "";
    ViewBag.Title = @dsSurvey.Tables[0].Rows[0]["Title"].ToString() + " - Preview";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var childname = Request.QueryString["ChildName"];
}

<style type="text/css">
    .questions {
        font-size: 12px;
    }

        .questions h1._title {
            font-weight: normal;
            margin: 0px;
            padding: 0px;
            font-size: 14px;
            line-height: 1.3;
            padding: 10px;
            border-bottom: solid 1px #f1f1f1;
            margin-bottom: 10px;
            position: absolute;
            top: 0px;
            right: 0px;
            left: 0px;
            background: #BDD5FB;
        }

    input[type=radio], input[type=checkbox] {
        margin-right: 4px;
    }

    .questions ._center label {
        display: block;
        white-space: nowrap;
        text-align: center;
        font-size: 12px;
    }

    .questions ._center input {
        display: block;
        margin: 5px auto;
    }

    .questions ._vcenter {
        padding-top: 10px;
        padding-bottom: 5px !important;
    }

    .questions ._bold {
        font-weight: bold;
        padding-bottom: 5px;
    }

    .questions .showwhen {
        background-color: #fcfcfc;
    }

    .questions .q {
        position: relative;
    }

        .questions .q:hover {
            background: #EBF2FD !important;
        }

        .questions .q.notFilled {
            border: solid 1px #FFA2A2;
            background-color: #FFF2F2 !important;
        }
</style>


<div class="alert alert-success" id="success-alert" hidden="hidden">
    <button type="button" class="close" data-dismiss="alert">x</button>
    <strong>Success! </strong>
   Survey is submitted successfully
</div>

<h2><a href="javascript:void(0);" id="back" onclick="history.go(-1);"></a> &nbsp;@dsSurvey.Tables[0].Rows[0]["Title"].ToString().Replace("[Child]",childname)</h2>
<p style="font-size:16px;">
    @dsSurvey.Tables[0].Rows[0]["TagLine"].ToString().Replace("[Child]", childname)
</p>
<div class="form-group">
    <div class='questions list-group'>
      
        @foreach (System.Data.DataRow q in dsQuestions.Tables[0].Rows)
        {
            var Nclass = q["Nclass"].ToString();
            var Qclass = q["Qclass"].ToString() + " _bold";
            var Aclass = q["Aclass"].ToString();

           
            var PAnswers="";
            if (dsQuestions.Tables[0].Rows.IndexOf(q)==0)
            { 
                PAnswers = q["Answer"].ToString(); 
            } 
            else
            { 
                PAnswers = q["PAnswerLike"].ToString(); 
            }
        

            //var a = PAnswers.Split('|');
            

            //var Answer = q["Answer"].ToString();
            //string value = Array.Find(a, element => element.StartsWith(Answer, StringComparison.Ordinal));
            //var hidden = value != "" ? "visibility:visible" : "visibility:hidden";
            //var hidden2 = value != "" ? "display:none;" : "display:block;";       
            

            if (q["PID"].ToString() == string.Empty)
            {

                <div id="@Html.Raw("q"+q["ID"].ToString())" class="q @Nclass list-group-item">

                    @if (@q["QuestionGroup"].ToString().Trim() != "")
                    {
                        <h1 class="_title">@Html.Raw(q["QuestionGroup"].ToString().Trim().Replace("[Child]", childname))</h1>
                        <div style="visibility:hidden; min-height: 45px; text-indent: 100%;">@Html.Raw(q["QuestionGroup"].ToString().Trim().Replace("[Child]", childname))</div>
                    }

                    <div class="@Qclass">@q["Question"].ToString().Replace("[Child]", childname) <sup style="color:#cccccc;">[@q["ID"]]</sup></div>
                                   
                   

                    @Html.Raw(Option((int)q["ID"], q["PossibleAnswers"].ToString(), q["InputType"].ToString(), Aclass, q["Score"].ToString(), q["Answer"].ToString()))
                    <input type="hidden" value="@q["Answer"].ToString()" data-possibleanswers="@q["PAnswerLike"].ToString()" qid="@q["ID"]" id="@Html.Raw("hdn"+q["ID"].ToString())" />

                </div>
            }
            else
            {

                <div style="display:none;" id="@Html.Raw("q"+q["ID"].ToString())" class="q @Nclass showwhen list-group-item" pid="@Html.Raw("q"+q["PID"].ToString())" pans="@Html.Raw(q["PAnswerLike"].ToString())">
                    @if (@q["QuestionGroup"].ToString().Trim() != "")
                    {
                        <h1 class="_title">@Html.Raw(q["QuestionGroup"].ToString().Trim().Replace("[Child]", childname))</h1>
                        <div style="visibility:hidden; min-height: 45px; text-indent: 100%;">@Html.Raw(q["QuestionGroup"].ToString().Trim().Replace("[Child]", childname))</div>
                    }

                    <div class="@Qclass">@q["Question"].ToString().Replace("[Child]", childname)  <sup style="color:#cccccc;">[@q["ID"]]</sup></div>
                    @Html.Raw(Option((int)q["ID"], q["PossibleAnswers"].ToString(), q["InputType"].ToString(), Aclass,q["Score"].ToString(),q["Answer"].ToString()))
                    <input type="hidden" value="@q["Answer"].ToString()" data-possibleanswers="@q["PAnswerLike"].ToString()" qid="@q["ID"]" id="@Html.Raw("hdn"+q["ID"].ToString())" />

                </div>
            }
        }
    </div>
</div>
<div style="margin:20px ;">
    &nbsp;
    <table style="width:100%;table-layout:fixed;border-collapse:collapse;">
        <tr>
            <td style="width:155px;padding:0px;">
                <input id="SurveySubmit" type="submit" value="Submit Survey" style="text-transform: uppercase; background: #4285F4;border-radius:3px;padding:8px 15px;color:#ffffff;border:none;text-shadow:none;font-size:14px;"  />
            </td>
            <td style="padding: 0px;"></td>
        </tr>

    </table>

</div>
<div id="divCompletion" style="bottom: 0px; left: 0px; right: 0px; position: fixed; margin-left: 338px;">
    <span style="padding: 2px; font-size: 10px; background-color: rgb(0, 128, 128); color: #FFF; ">0% Complete</span>
    <div style="background:white;height:5px;"><div style="border-bottom: solid 5px #008080; width: 0%" class="colored"></div></div>
</div>

@section scripts{
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js"></script>
    <script type="text/javascript">
        $(function () {
            var score;

            $("#success-alert").hide();
            //var childname = decodeURI(GetQueryStringValues()['ChildName']);
            //$(this).html().replace("[Child]", childname);

            syncStrips();
            pageloadtrigger();


            $("input[type=radio], input[type=checkbox]").bind("click", function () {

                qid = $(this).attr("qid");
                 score=  $(this).attr("data-score");
                if ($(this).prop("type") == "radio" || $(this).prop("type") == "checkbox") {
                    var group = $(this).closest(".q").find("input:checked");

                    $("#hdn" + qid).val("");
                    group.each(function () {

                        $("#hdn" + qid).val($("#hdn" + qid).val() + "|" + this.value).trigger('change');
                    });
                    if (group.length == 0) {
                        $("#hdn" + qid).trigger('change');
                    }
                    if ($("#hdn" + qid).val().length > 0) { $("#hdn" + qid).val($("#hdn" + qid).val().substr(1)); $("#hdn" + qid).closest(".q").removeClass("notFilled"); }
                }
            });
            $("select").change(function () {
                $("#hdn" + $(this).attr("qid")).val("|" + this.value).trigger('change');
            });

            $("textarea, input[type=text]").blur(function () {
                var oldval = $("#hdn" + $(this).attr("qid")).val();
                if (this.value != "") {
                    var newval = "|" + this.value;
                    $("#hdn" + $(this).attr("qid")).val(oldval + newval).trigger('change');
                }
            });

            $("input[type=date]").blur(function () {
                $("#hdn" + $(this).attr("qid")).val("|"+ this.value).trigger('change');
            });
          

            //function countelement()
            //{
            //    $("img[src='test.gif']").length;
            //}
            function pageloadtrigger(){


                $("input[type=hidden]").each(function(){

                    var qid = $(this).attr("qid");
                    var chk="q"+qid;
                    if(qid!=null){

                        var ans = $(this).val();
                        if (ans != "") {

                            EnableDisableChild(qid, ans);
                        }



                        //var ans2= $(this).attr("data-possibleanswers");
                        //if (ans == "") {  }
                        //else
                        //{
                        //    if (hasAnswer(ans, ans2)) {
                        //            var va = $("[pid=q" + qid + "]").attr("pid");
                        //            var ans3 = $("[pid=q" + qid + "]").attr("pans");
                        //            if(chk==va)
                        //            {
                        //                if (hasAnswer(ans, ans3)) {
                        //                    $("[pid=q" + qid + "]").show();
                        //                }
                        //                else {
                        //                    $("[pid=q" + qid + "]").hide();
                        //                }
                        //            }
                        //        $("#q" + qid).css("display", "block"); $("#q" + qid).slideDown(); $("#q" + qid).show();
                        //        syncStrips();
                        //    }
                        //    else {
                        //        $("[pid=q" + qid + "]").attr("pid");
                        //        $("#q" + qid).slideUp(); $("#q" + qid).css("display", "none"); $("#q" + qid).hide();
                        //    }
                        //}
                    }

                });



            }


            function showStrips() {
                $(".q").css("background", "");
                $(".q:visible:odd").css("background", "#f9f9f9");
                //$(".q").css('display','block');
            }



            $("input[type=hidden]").change(function () {

           var ans = this.value.length > 0 ? this.value.substr(1) : "";

           var qid = $(this).attr("qid");
           var multians=ans.split('|')
           if(multians.length > 1)
           {
               for (var i = 1; i < multians.length; i++) {
                   score=parseInt(score)
                   ++score;
                   break;
               }
           }

                var scor=score;
                var childId= GetQueryStringValues()['ChildId'];
                var SurID = GetQueryStringValues()['surveyID'];

                EnableDisableChild(qid, ans);
                setCompletionDiv();

                savequestions(qid, ans, score, childId, SurID,"SaveUpdate");

            });
  $(".__slider").slider({
     range: "min",
      value: 0,
      min: 0,
      max: 700,
      slide: function( event, ui ) {
          var items=parseInt($(this).attr("length"));
          var qid=$(this).attr("qid");

          $('label[for^="q'+ qid +'_"]').css("color","#cccccc");
          for(var i=0;i<=items;i++){
              var step=700/(items+1);
              if(ui.value <= (i+1) * step && ui.value > (i) * step){
                  $('label[for="q'+ qid +'_'+i+'"]').css("color","#000000");
              }

          }

          if(ui.value==0){
            $('label[for^="q'+ qid +'_"]').css("color","#333333");
          }
          else{
              $("#hdn" + $(this).attr("qid")).val(ui.value).trigger('change');
          }
      }
    });
});


        function EnableDisableChild(qid, ans) {

            if (ans == "") { $("[pid=q" + qid + "]").slideUp(); }
            $("[pid=q" + qid + "]").each(function () {
                if (hasAnswer(ans, $(this).attr("pans"))) {
                    $(this).slideDown("fast", function () { syncStrips(); });
                }
                else {
                    $(this).slideUp("fast", function () { //to hide childs if any
                        var childid = $(this).attr("id"); syncStrips();

                        if (childid.trim() != '') {
                            $("[pid=" + childid + "]").slideUp("fast", function () { //to hide childs if any
                                var childid = $(this).attr("id"); syncStrips();

                                if (childid.trim() != '') {
                                    $("[pid=" + childid + "]").slideUp("fast", function () { //to hide childs if any
                                        var childid = $(this).attr("id"); syncStrips();

                                        if (childid.trim() != '') {
                                            $("[pid=" + childid + "]").slideUp();
                                        }
                                    });
                                }
                            });
                        }
                    });
                }
            });




        }


        function GetQueryStringValues() {
            var vars = [], hash;
            var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
            for (var i = 0; i < hashes.length; i++) {
                hash = hashes[i].split('=');
                vars.push(encodeURI(hash[0]));
                vars[hash[0]] = hash[1];
            }
            return vars;
        }

        function syncStrips() {
            $(".q").css("background", "");
            $(".q:visible:odd").css("background", "#f9f9f9");
        }
        function hasAnswer(ans1, ans2) {
            var a1 = ans1.split('|');
            var a2 = ans2.split('|');
            var a3 = concatArraysUniqueWithSort(a1, a2);
            return (a3.length < a1.length + a2.length);

        }
        var concatArraysUniqueWithSort = function (thisArray, otherArray) {
            var newArray = thisArray.concat(otherArray).sort(function (a, b) {
                return a > b ? 1 : a < b ? -1 : 0;
            });

            return newArray.filter(function (item, index) {
                return newArray.indexOf(item) === index;
            });
        };
        function enableDate(elm, id_date) {
            if (elm.checked) {
                $("#" + id_date).removeAttr("disabled", "disabled");
            }
            else {
                $("#" + id_date).val('');
                $("#" + id_date).attr("disabled", "disabled");
            }
        }
        function enabletextDate(elm, id_date) {
            if (elm.value.trim() !='' ) {
                $("#" + id_date).removeAttr("disabled", "disabled");
            }
            else {
                $("#" + id_date).attr("disabled", "disabled");
            }
        }

        function setCompletionDiv(){
            var noQ = 0, nofQ = 0;
            $(".questions").find(".q:visible").find("input[type=hidden]").each(function(index, obj){
                if($(obj).val() != ""){
                    nofQ++;
                }
                noQ++;
            });

            var percentage = (Math.round((nofQ / noQ) * 100).toFixed(0)) + "%";
            $("#divCompletion").find("span").text(percentage + " Complete");
            $("#divCompletion").find(".colored").css("width", percentage);
        }

      
        $("#SurveySubmit").click(function (e) {
         
            e.preventDefault();

            var flag = true;
            $(".questions").find(".q:visible").find("input[type=hidden]").each(function (index, obj) {

                if ($(obj).val() != "") {
                    $(obj).closest(".q").removeClass("notFilled");
                }
                else {
                    $(obj).closest(".q").addClass("notFilled");
                    flag = false;
                }
            });
            setCompletionDiv();

            $('#b1').closest('li').css('background', '#FCD6DF').css('border-right', 'solid 5px #cc0000;');

            if (flag) {
                bootbox.confirm("Are you sure to submit this Survey?", function (confirmed) {
                    if (confirmed == true) {
                      

                        var childId = GetQueryStringValues()['ChildId'];
                        var SurID = GetQueryStringValues()['surveyID'];
                        savequestions(null, null, null, childId, SurID, "SubmitStatus")

                        $("#success-alert").fadeTo(2000, 500).slideUp(500, function () {
                            $(this).show();
                            $("#success-alert").alert('close');
                        });

                    }
                });
            }


        });


        function savequestions(qid, ansid, s, cid, SurID, status) {
          
            var url = "/UserQuestion/SaveUserQuestion"
            $.post(url, { QuestionID: qid, AnswerID: ansid, score: s, childid: cid, SurveyID: SurID, statusparm: status }, function (data) {

            });
        }


    </script>
}

@functions{

    public string GetArrayValue(string[] sr,int i)
    {
        string returnrsl = "";
        try
        {
        if(sr[i].Length>0)
        {
            returnrsl = sr[i].ToString();
        }


        }
        catch (System.IndexOutOfRangeException)
        {
            return null;
        }
        return returnrsl;


    }
    


    
    protected string Option(int qid, string a, string type, string cssclass,string scr,string ans)
    {

        var tradio = "<div class='#c#'><input type='radio'  qid='#q#' name='q#q#' id='q#q#_#i#' value='#si#' data-score='#sc#' #chk# ><label for='q#q#_#i#'>#si#</label></div>";
        var tslider = "<div class='#c#'><label for='q#q#_#i#' data-score='#sc#'>#si#</label></div>";
        var tcheckbox = "<div class='#c#'><input type='checkbox' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si#' data-score='#sc#' #chk#><label for='q#q#_#i#'>#si#</label></div>";
        var ttext = "<div class='#c#'><input class='form-control' type='text' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si#'></div>";
        var tmultitext = "<div class='#c#'><textarea class='form-control' qid='#q#' name='q#q#' id='q#q#_#i#'>#si#</textarea></div>";

        var tdate = "<div class='#c#'><input class='form-control' type='date' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si#'></div>";
        var tmed = @"<div class='#c# form-inline'>" +
                    "<input class='form-control col-sm-2' placeholder='Indication' type='text' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si1#'>" +
                    "<input class='form-control col-sm-2' placeholder='Dosage' type='text' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si2#'>" +
                    "<input class='form-control col-sm-2' placeholder='Frequency' type='text' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si3#'>" +
                    "<input class='form-control col-sm-2' placeholder='Start Date' type='text' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si4#'>" +
                    "<input class='form-control col-sm-2' placeholder='End Date' type='text' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si5#'>" +
                    "</div>";
        var tsch = @"<div class='#c# form-inline'>" +
                   "<input class='form-control col-sm-3' placeholder='Count of Sessions/Week' type='text' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si#'>" +
                   "<input class='form-control col-sm-3' placeholder='Time/Session' type='text' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si#'>" +
                   "<input class='form-control col-sm-3' placeholder='Start (mn-yy)' type='text' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si#'>" +
                   "<input class='form-control col-sm-3' placeholder='End (mm-yy)' type='text' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si#'>" +
                   "</div>";
        var tcheckdate = "<div class='#c#  form-inline'><input type='checkbox' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si#' class='col-sm-1' style='margin-top:10px;' onclick='enableDate(this,\"q#q#_1\")'><div class='col-sm-10'><input disabled='disabled' class='form-control' type='date' qid='#q#' name='q#q#' id='q#q#_1' value='#si#'></div></div>";
        var ttextdate = "<div class='#c#  form-inline'>" +
                         "<input type='text' placeholder='Details' qid='#q#' name='q#q#' id='q#q#_#i#' value='#si#' class='form-control' style='width:68%;' onkeyup='enabletextDate(this,\"q#q#_1\")'>" +
                         "<input type='date' disabled='disabled' qid='#q#' name='q#q#' id='q#q#_1' value='#si#' class='form-control'></div>";
        string temp = @"";
        string[] s = a.Split('|');

        string[] sr = new string[] { };
        if (scr!="")
        {

           sr = scr.Split('|');
        }



        for (int i = 0; i < s.Length; i++)
        {

            string att = "";

            var multians=ans.Split('|');

           




            if (type == "radio")
            {
                for (int j = 0; j < s.Length; j++)
                {
                    for (int k = 0; k < multians.Length; k++)
                    {
                        if (s[i].ToString() == multians[k])
                        {
                            att = "checked";
                            break;
                        }
                        else
                        {
                            att = "";
                        }
                    }
                    break;
                }
                temp += tradio.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si#", s[i]).Replace("#sc#", GetArrayValue(sr, i)).Replace("#chk#", att);
            }
            else if (type == "checkbox")
            {
                 for (int j = 0; j < s.Length; j++)
            {
                for (int k = 0; k < multians.Length; k++)
                {
                    if (s[i].ToString() == multians[k])
                    {
                        att = "checked";
                        break;
                    }
                    else
                    {
                        att = "";
                    }
                }
                break;
            }

                temp += tcheckbox.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si#", s[i]).Replace("#sc#", GetArrayValue(sr, i)).Replace("#chk#", att);
            }

            else if (type == "text")
            {
                temp += ttext.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si#", ans);
            }
            else if (type == "multitext")
            {

                temp += tmultitext.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si#", ans);

            }
            else if (type == "select")
            {

                //to be continue from here
                string selectedvalue = "";
                if (s[i]==ans)
                {
                    var selectedoption = ans;
                    selectedvalue = "selected";
                   // break;
                }
                else
                {
                    selectedvalue = "";
                }


                if (i == 0)
                {
                    temp += "<div class='" + cssclass + "'><select class='form-control' qid='" + qid + "' name='q" + qid + "' id='q" + qid + "_" + i + "' ><option value=''></option>";
                }
                temp += "<option value='" + s[i] + "' " +selectedvalue +">" + s[i] + "</option>";
                if (i == s.Length - 1)
                {
                    temp += "</select></div>";
                }

            }
            else if (type == "date")
            {
                temp += tdate.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si#", ans);
            }
            else if (type == "med")
            {
                if ( multians.Length==1)
                {
                    temp += tmed.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si1#", multians[0]);
                }
               
                if ( multians.Length == 2)
                {
                    temp += tmed.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si2#", multians[1]);
                }
               
                if ( multians.Length == 3)
                {
                    temp += tmed.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si3#", multians[2]);
                }
               
                if ( multians.Length == 4)
                {
                    temp += tmed.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si4#", multians[3]);
                }
               
               
                if (multians.Length == 5)
                {
                    temp += tmed.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si5#", multians[4]);
                }
               
                
            }
            else if (type == "sch")
            {
                temp += tsch.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si#", s[i]);
            }
            else if (type == "checkdate")
            {
                temp += tcheckdate.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si#", s[i]);
            }
            else if (type == "textdate")
            {
                temp += ttextdate.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si#", s[i]);
            }
            else if (type == "slider")
            {
                temp += tslider.Replace("#c#", cssclass + " slider").Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si#", s[i]);
                if (i == s.Length - 1) { temp += ("<div id='slider#q#' qid='#q#' length='#i#' class='col-sm-" + (i == 5 ? "12" : "10") + " __slider'></div>").Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()); }
            }
            else
            {
                temp += ttext.Replace("#c#", cssclass).Replace("#q#", qid.ToString()).Replace("#i#", i.ToString()).Replace("#si#", s[i]);
            }
        }
        temp += "";
        return temp;
    }
}