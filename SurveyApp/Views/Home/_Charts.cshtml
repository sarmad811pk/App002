
@using System.Data;
@using SurveyApp.Models;

@{ 
    int studyId = String.IsNullOrEmpty(Request.QueryString["studyId"]) != true ? Convert.ToInt32(Request.QueryString["studyId"]) : 0;
    int childId = String.IsNullOrEmpty(Request.QueryString["childIdts"]) != true ? Convert.ToInt32(Request.QueryString["childIdts"]) : 0;
    string studyName = String.IsNullOrEmpty(Request.QueryString["studyName"]) != true ? Request.QueryString["studyName"].ToString() : "";
    string childNamets = String.IsNullOrEmpty(Request.QueryString["child"]) != true ? Request.QueryString["child"].ToString() : "";

    string[] roles = Roles.GetRolesForUser(User.Identity.Name);
    string role = roles.Length > 0 ? roles[0] : "";
    bool isAssignedToTeacher = false;
    //string childName = "";
    //if(childId > 0)
    //{
    //    using (var cChild = new ChildContext())
    //    {
    //        Child objChildTS = cChild.Children.Where(c => c.Id == childId).FirstOrDefault();
    //        childName = objChildTS.Name;
    //    }
    //}


    DataSet dsCharts = SurveyApp.DataHelper.DashboardGetGraphs(studyId, WebSecurity.CurrentUserId, childId);
    
    if(dsCharts.Tables.Count > 7 && dsCharts.Tables[7] != null)
    {
        dtSurveys = dsCharts.Tables[7];
    }

    string dASP = "", pASP = "", tASP = "";
    string dABC = "", pABC = "", tABC = "", pSRS = "", tSRS = "";
    string dPEDsql = "", pPEDsql = "";
    string dPEDsqlS = "", pPEDsqlS = "";
    string dSCQ = "", pSCQ = "";
    string dSCQTeacher = "", tSCQTeacher = "";
    string dCareGiver = "", pCareGiver = "";
    string dPES = "", pPES = "";
    string dGSI = "", pGSI = "";
    string dAPRS = "", tAPRS = "";
    string dWT = "", tWT = "";
    string dSLP = "", pSLP = "", tSLP = "", dInsom = "", pInsom = "", dConnor = "", pConnor = "", dtConnor = "", tConnor = "";
    string dpFeed = "", pFeed = "", dtFeed = "", tFeed = "", dpPAS = "", pPAS = "";

    string dpABCg = "", aspABCg = "", tstpABCg = "", unpABCg = "", vspABCg = "", qpABCg = "";
    string dtABCg = "", astABCg = "", tsttABCg = "", untABCg = "", vstABCg = "", qtABCg = "";

    string dpSRSg = "", aspSRSg = "", tstpSRSg = "", unpSRSg = "", vspSRSg = "", qpSRSg = "";
    string dtSRSg = "", astSRSg = "", tsttSRSg = "", untSRSg = "", vstSRSg = "", qtSRSg = "";

    string dpPQLg = "", aspPQLg = "", tstpPQLg = "";
    string dpWLCg = "", aspWLCg = "", tstpWLCg = "";

    string dpADAM = "", dtADAM = "", pADAM = "", tADAM = "";
    string dpVanderbilt = "", dtVanderbilt = "", pVanderbilt = "", tVanderbilt = "";

    string pvD = "", pvAdapting = "", pvCFH = "", pvCFS = "", pvLAU = "", pvLIC = "", pvPAULT = "", pvSectionA = "", pvSectionB = "", pvSectionC = "", pvRAW = "", pvRTO = "", pvT = "", pvULM = "", pvUSM = "";
    string tvD = "", tvCS = "", tvE = "", tvFM = "", tvGM = "", tvIR = "", tvN = "", tvP = "", tvPAL = "", tvSectionA = "", tvSectionB = "", tvSectionC = "", tvR = "", tvSC = "", tvW = "";
    //Auditory Sensitivity Taste/Smell Sensitivity  Underresponsiveness Visual Sensitivity  Questionnaire

    /* LIFE EVENTS */
    //List<LifeEventChart> lstABCPTLifeEvents = new List<LifeEventChart>();
    //int indexLE = 0;
    string tQuarterly = "", dQuarterly = "";

    #region populatingGraphs
    if (dsCharts != null && dsCharts.Tables != null && dsCharts.Tables.Count > 0)
    {
        #region Aberrant Behavior Checklist Social Responsiveness Scale
        DataRow[] drABCP = dsCharts.Tables[0].Select("SURVEYid = 4");
        foreach(DataRow dr in drABCP)
        {
            dABC += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            //if(dr["EventName"] != DBNull.Value)
            //{
            //    //lstABCPTLifeEvents.Add(new LifeEventChart { IndexOnChart = indexLE, EventsName = dr["EventName"].ToString() });
            //}
            pABC += dr["Score"] + ",";
            //indexLE++;
        }
        DataRow[] drABCT = dsCharts.Tables[1].Select("SURVEYid = 4");
        foreach (DataRow dr in drABCT)
        {
            if(dr["ScheduleDate"] != DBNull.Value && dABC.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dABC += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tABC += dr["Score"] + ",";
        }

        DataRow[] drSRSP = dsCharts.Tables[0].Select("SURVEYid = 5");
        foreach (DataRow dr in drSRSP)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dABC.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dABC += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pSRS += dr["Score"] + ",";
        }
        DataRow[] drSRST = dsCharts.Tables[1].Select("SURVEYid = 5");
        foreach (DataRow dr in drSRST)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dABC.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dABC += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tSRS += dr["Score"] + ",";
        }
        #endregion

        #region Abbreviated Sensory Profile
        DataRow[] drASPP = dsCharts.Tables[0].Select("SURVEYid = 1");
        foreach (DataRow dr in drASPP)
        {
            dASP += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pASP += dr["Score"] + ",";
        }
        DataRow[] drASPT = dsCharts.Tables[1].Select("SURVEYid = 1");
        foreach (DataRow dr in drASPT)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dASP.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dASP += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tASP += dr["Score"] + ",";
        }
        #endregion

        #region Anxiety Depression and Mood Scale
        DataRow[] drPADAM = dsCharts.Tables[0].Select("SURVEYid = 35");
        foreach (DataRow dr in drPADAM)
        {
            dpADAM += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pADAM += dr["Score"] + ",";
        }
        DataRow[] drTADAM = dsCharts.Tables[1].Select("SURVEYid = 35");
        foreach (DataRow dr in drTADAM)
        {
            dtADAM += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            tADAM += dr["Score"] + ",";
        }
        #endregion

        #region Vanderbilt Adhd Diagnostic Teacher Rating Scale
        DataRow[] drPVanderbilt = dsCharts.Tables[0].Select("SURVEYid = 34");
        foreach (DataRow dr in drPVanderbilt)
        {
            dpVanderbilt += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pVanderbilt += dr["Score"] + ",";
        }
        DataRow[] drTVanderbilt = dsCharts.Tables[1].Select("SURVEYid = 34");
        foreach (DataRow dr in drTVanderbilt)
        {
            dtVanderbilt += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            tVanderbilt += dr["Score"] + ",";
        }
        #endregion

        #region Short Language Profile (Parent)
        DataRow[] drSLPP = dsCharts.Tables[0].Select("SURVEYid = 10");
        foreach (DataRow dr in drSLPP)
        {
            dSLP += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pSLP += dr["Score"] + ",";
        }
        #endregion

        #region Insomnia Severity Index (Parent)
        DataRow[] drInsom = dsCharts.Tables[0].Select("SURVEYid = 12");
        foreach (DataRow dr in drInsom)
        {
            dInsom += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pInsom += dr["Score"] + ",";
        }
        #endregion

        #region Connor-Davidson Resilience Scale 10 (Parent)
        DataRow[] drConnor = dsCharts.Tables[0].Select("SURVEYid = 13");
        foreach (DataRow dr in drConnor)
        {
            dConnor += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pConnor += dr["Score"] + ",";
        }
        #endregion

        #region Connor-Davidson Resilience Scale 10 (Teacher)
        DataRow[] drtConnor = dsCharts.Tables[1].Select("SURVEYid = 13");
        foreach (DataRow dr in drtConnor)
        {
            dtConnor += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            tConnor += dr["Score"] + ",";
        }
        #endregion


        #region Feedback Questionnaire (Parent)
        DataRow[] drpFeedback = dsCharts.Tables[0].Select("SURVEYid = 15");
        foreach (DataRow dr in drpFeedback)
        {
            dpFeed += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pFeed += dr["Score"] + ",";
        }
        #endregion

        #region Feedback Questionnaire (Teacher)
        DataRow[] drtFeedback = dsCharts.Tables[1].Select("SURVEYid = 15");
        foreach (DataRow dr in drtFeedback)
        {
            dtFeed += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            tFeed += dr["Score"] + ",";
        }
        #endregion

        #region Parent Assessment Summary (Parent)
        DataRow[] drpPAS = dsCharts.Tables[0].Select("SURVEYid = 48");
        foreach (DataRow dr in drpPAS)
        {
            dpPAS += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pPAS += dr["Score"] + ",";
        }
        #endregion

        //#region Weekly Teacher 
        //DataRow[] drWT = dsCharts.Tables[6].Select("UserType = 2");
        //foreach (DataRow dr in drWT)
        //{
        //    dWT += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
        //    tWT += dr["Score"] + ",";
        //}
        //#endregion

        #region PedsQL-Parent Report for Children(8-12)
        DataRow[] drPEDsqlP = dsCharts.Tables[0].Select("SURVEYid IN (6 ,7, 8, 9)");
        foreach (DataRow dr in drPEDsqlP)
        {
            dPEDsql += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pPEDsql += dr["Score"] + ",";
        }
        #endregion
        #region PedsQL-Student Report for Children(19 yrs and above)
        DataRow[] drPEDsqlS = dsCharts.Tables[2].Select("SURVEYid IN (45)");
        foreach (DataRow dr in drPEDsqlS)
        {
            dPEDsqlS += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pPEDsqlS += dr["Score"] + ",";
        }
        #endregion

        #region SCQ
        DataRow[] drSCQP = dsCharts.Tables[0].Select("SURVEYid IN (11)");
        foreach (DataRow dr in drSCQP)
        {
            dSCQ += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pSCQ += dr["Score"] + ",";
        }
        DataRow[] drSCQT = dsCharts.Tables[1].Select("SURVEYid IN (11)");
        foreach (DataRow dr in drSCQT)
        {
            dSCQTeacher += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            tSCQTeacher += dr["Score"] + ",";
        }
        #endregion


        #region Caregiver Strain Questionnaire
        DataRow[] drCareGiverP = dsCharts.Tables[0].Select("SURVEYid = 2");
        foreach (DataRow dr in drCareGiverP)
        {
            dCareGiver += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pCareGiver += dr["Score"] + ",";
        }
        #endregion

        #region Family Empowerment Scale
        DataRow[] drPESrP = dsCharts.Tables[0].Select("SURVEYid = 14");
        foreach (DataRow dr in drPESrP)
        {
            dPES += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pPES += dr["Score"] + ",";
        }
        #endregion

        #region GI Severity Index 
        DataRow[] drGSIP = dsCharts.Tables[0].Select("SURVEYid = 3");
        foreach (DataRow dr in drGSIP)
        {
            dGSI += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pGSI += dr["Score"] + ",";
        }
        #endregion

        #region Academic Progress Rating Scales
        DataRow[] drAPRST = dsCharts.Tables[1].Select("SURVEYid = 27");
        foreach (DataRow dr in drAPRST)
        {
            dAPRS += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            tAPRS += dr["Score"] + ",";
        }
        #endregion

        #region Aberrant  Behaviour Checklist : Parent Quarterly Trend
        DataRow[] drASBC = dsCharts.Tables[3].Select("QuestionGroup = 'Irritability' AND SURVEYid = 4");
        foreach (DataRow dr in drASBC)
        {
            dpABCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            aspABCg += dr["Score"] + ",";
        }
        DataRow[] drTSTP = dsCharts.Tables[3].Select("QuestionGroup = 'Lethargy' AND SURVEYid = 4");
        foreach (DataRow dr in drTSTP)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dpABCg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dpABCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tstpABCg += dr["Score"] + ",";
        }
        DataRow[] drSteros = dsCharts.Tables[3].Select("QuestionGroup = 'Stereotypy' AND SURVEYid = 4");
        foreach (DataRow dr in drSteros)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dpABCg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dpABCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            unpABCg += dr["Score"] + ",";
        }
        DataRow[] drHypers = dsCharts.Tables[3].Select("QuestionGroup = 'Hyperactivity' AND SURVEYid = 4");
        foreach (DataRow dr in drHypers)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dpABCg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dpABCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            vspABCg += dr["Score"] + ",";
        }
        DataRow[] drInps = dsCharts.Tables[3].Select("QuestionGroup = 'Inappropriate Speech' AND SURVEYid = 4");
        foreach (DataRow dr in drInps)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dpABCg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dpABCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            qpABCg += dr["Score"] + ",";
        }
        #endregion

        #region Aberrant  Behaviour Checklist : Teacher Quarterly Trend
        DataRow[] drIrrisT = dsCharts.Tables[4].Select("QuestionGroup = 'Irritability' AND SURVEYid = 4");
        foreach (DataRow dr in drIrrisT)
        {
            dtABCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            astABCg += dr["Score"] + ",";
        }
        DataRow[] drLetharsT = dsCharts.Tables[4].Select("QuestionGroup = 'Lethargy' AND SURVEYid = 4");
        foreach (DataRow dr in drLetharsT)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dtABCg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dtABCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tsttABCg += dr["Score"] + ",";
        }
        DataRow[] drSterosT = dsCharts.Tables[4].Select("QuestionGroup = 'Stereotypy' AND SURVEYid = 4");
        foreach (DataRow dr in drSterosT)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dtABCg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dtABCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            untABCg += dr["Score"] + ",";
        }
        DataRow[] drHypersT = dsCharts.Tables[4].Select("QuestionGroup = 'Hyperactivity' AND SURVEYid = 4");
        foreach (DataRow dr in drHypersT)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dtABCg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dtABCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            vstABCg += dr["Score"] + ",";
        }
        DataRow[] drInpsT = dsCharts.Tables[4].Select("QuestionGroup = 'Inappropriate Speech' AND SURVEYid = 4");
        foreach (DataRow dr in drInpsT)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dtABCg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dtABCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            qtABCg += dr["Score"] + ",";
        }
        #endregion

        #region Social Responsivness Scale(SRS) sub scale : Parent Quarterly Trend
        DataRow[] drAwareness = dsCharts.Tables[3].Select("QuestionGroup = 'Social Awareness' AND SURVEYid = 5");
        foreach (DataRow dr in drAwareness)
        {
            dpSRSg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            aspSRSg += dr["Score"] + ",";
        }
        DataRow[] drCognition = dsCharts.Tables[3].Select("QuestionGroup = 'Social Cognition' AND SURVEYid = 5");
        foreach (DataRow dr in drCognition)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dpSRSg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dpSRSg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tstpSRSg += dr["Score"] + ",";
        }
        DataRow[] drCommunication = dsCharts.Tables[3].Select("QuestionGroup = 'Social Communication' AND SURVEYid = 5");
        foreach (DataRow dr in drCommunication)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dpSRSg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dpSRSg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            unpSRSg += dr["Score"] + ",";
        }
        DataRow[] drMotivation = dsCharts.Tables[3].Select("QuestionGroup = 'Social Motivation' AND SURVEYid = 5");
        foreach (DataRow dr in drMotivation)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dpSRSg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dpSRSg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            vspSRSg += dr["Score"] + ",";
        }
        DataRow[] drBahaviour = dsCharts.Tables[3].Select("QuestionGroup = 'Restricted Interests and Repetitive Bahaviour' AND SURVEYid = 5");
        foreach (DataRow dr in drBahaviour)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dpSRSg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dpSRSg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            qpSRSg += dr["Score"] + ",";
        }
        #endregion

        #region Social Responsivness Scale(SRS) sub scale : Teacher Quarterly Trend
        DataRow[] drAwarenessT = dsCharts.Tables[4].Select("QuestionGroup = 'Social Awareness' AND SURVEYid = 5");
        foreach (DataRow dr in drAwarenessT)
        {
            dtSRSg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            astSRSg += dr["Score"] + ",";
        }
        DataRow[] drCognitionT = dsCharts.Tables[4].Select("QuestionGroup = 'Social Cognition' AND SURVEYid = 5");
        foreach (DataRow dr in drCognitionT)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dtSRSg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dtSRSg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tsttSRSg += dr["Score"] + ",";
        }
        DataRow[] drCommunicationT = dsCharts.Tables[4].Select("QuestionGroup = 'Social Communication' AND SURVEYid = 5");
        foreach (DataRow dr in drCommunicationT)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dtSRSg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dtSRSg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            untSRSg += dr["Score"] + ",";
        }
        DataRow[] drMotivationT = dsCharts.Tables[4].Select("QuestionGroup = 'Social Motivation' AND SURVEYid = 5");
        foreach (DataRow dr in drMotivationT)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dtSRSg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dtSRSg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            vstSRSg += dr["Score"] + ",";
        }
        DataRow[] drBahaviourT = dsCharts.Tables[4].Select("QuestionGroup = 'Restricted Interests and Repetitive Bahaviour' AND SURVEYid = 5");
        foreach (DataRow dr in drBahaviourT)
        {
            if (dr["ScheduleDate"] != DBNull.Value && dtSRSg.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                dtSRSg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            qtSRSg += dr["Score"] + ",";
        }
        #endregion

        //#region PedsQL Parent Report : Parent Quarterly Trend
        //DataRow[] drPedSQL0812 = dsCharts.Tables[16].Select("SurveyID = 8");
        //foreach (DataRow dr in drPedSQL0812)
        //{
        //    dpPQLg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
        //    aspPQLg += dr["Score"] + ",";
        //}
        //#endregion

        //#region * When level changes for Child
        //DataRow[] drDSM1T = dsCharts.Tables[17].Select("QuestionGroup = 'DSM Level 1'");
        //foreach (DataRow dr in drDSM1T)
        //{
        //    dpWLCg += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
        //    aspWLCg += dr["Score"] + ",";
        //}
        //DataRow[] drDSM2T = dsCharts.Tables[17].Select("QuestionGroup = 'DSM Level 2'");
        //foreach (DataRow dr in drDSM2T)
        //{
        //    tstpWLCg += dr["Score"] + ",";
        //}
        //#endregion


        #region VindelandParent
        DataRow[] pvDates = dsCharts.Tables[3].Select("QuestionGroup = 'Adapting' AND SURVEYid = 46");
        foreach (DataRow dr in pvDates)
        {
            pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            pvAdapting += dr["Score"] + ",";
        }
        DataRow[] drCaring = dsCharts.Tables[3].Select("QuestionGroup = 'Caring For Home' AND SURVEYid = 46");
        foreach (DataRow dr in drCaring)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvCFH += dr["Score"] + ",";
        }
        DataRow[] drSelf = dsCharts.Tables[3].Select("QuestionGroup = 'Caring For Self' AND SURVEYid = 46");
        foreach (DataRow dr in drSelf)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvCFS += dr["Score"] + ",";
        }
        DataRow[] drListening = dsCharts.Tables[3].Select("QuestionGroup = 'Listening And Understanding' AND SURVEYid = 46");
        foreach (DataRow dr in drListening)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvLAU += dr["Score"] + ",";
        }
        DataRow[] drLiing = dsCharts.Tables[3].Select("QuestionGroup = 'Living In Community' AND SURVEYid = 46");
        foreach (DataRow dr in drLiing)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvLIC += dr["Score"] + ",";
        }
        DataRow[] drplaying = dsCharts.Tables[3].Select("QuestionGroup = 'Playing And Using Leisure Time' AND SURVEYid = 46");
        foreach (DataRow dr in drplaying)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvPAULT += dr["Score"] + ",";
        }
        DataRow[] drseca = dsCharts.Tables[3].Select("QuestionGroup = 'Problem Behaviors - Section A (Parent)' AND SURVEYid = 46");
        foreach (DataRow dr in drseca)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvSectionA += dr["Score"] + ",";
        }
        DataRow[] drsecb = dsCharts.Tables[3].Select("QuestionGroup = 'Problem Behaviors - Section B (Parent)' AND SURVEYid = 46");
        foreach (DataRow dr in drsecb)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvSectionB += dr["Score"] + ",";
        }
        DataRow[] drsecc = dsCharts.Tables[3].Select("QuestionGroup = 'Problem Behaviors - Section C (Parent)' AND SURVEYid = 46");
        foreach (DataRow dr in drsecc)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvSectionC += dr["Score"] + ",";
        }
        DataRow[] drread = dsCharts.Tables[3].Select("QuestionGroup = 'Reading and Writing' AND SURVEYid = 46");
        foreach (DataRow dr in drread)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvRAW += dr["Score"] + ",";
        }
        DataRow[] drrto = dsCharts.Tables[3].Select("QuestionGroup = 'Relating To Others' AND SURVEYid = 46");
        foreach (DataRow dr in drrto)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvRTO += dr["Score"] + ",";
        }
        DataRow[] drTaling = dsCharts.Tables[3].Select("QuestionGroup = 'Talking' AND SURVEYid = 46");
        foreach (DataRow dr in drTaling)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvT += dr["Score"] + ",";
        }
        DataRow[] drulm = dsCharts.Tables[3].Select("QuestionGroup = 'Using Large Muscles' AND SURVEYid = 46");
        foreach (DataRow dr in drulm)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvULM += dr["Score"] + ",";
        }
        DataRow[] drusm = dsCharts.Tables[3].Select("QuestionGroup = 'Using Small Muscles' AND SURVEYid = 46");
        foreach (DataRow dr in drusm)
        {
            if (dr["ScheduleDate"] != DBNull.Value && pvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                pvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            pvUSM += dr["Score"] + ",";
        }
        #endregion

        #region VindelandTeacher
        DataRow[] tvDates = dsCharts.Tables[4].Select("QuestionGroup = 'Coping Skills' AND SURVEYid = 47");
        foreach (DataRow dr in tvDates)
        {
            tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            tvCS += dr["Score"] + ",";
        }
        DataRow[] drExpressive = dsCharts.Tables[4].Select("QuestionGroup = 'Expressive' AND SURVEYid = 47");
        foreach (DataRow dr in drExpressive)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvE += dr["Score"] + ",";
        }
        DataRow[] Fine = dsCharts.Tables[4].Select("QuestionGroup = 'Fine Motor' AND SURVEYid = 47");
        foreach (DataRow dr in Fine)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvFM += dr["Score"] + ",";
        }
        DataRow[] Gross = dsCharts.Tables[4].Select("QuestionGroup = 'Gross Motor' AND SURVEYid = 47");
        foreach (DataRow dr in Gross)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvGM += dr["Score"] + ",";
        }
        DataRow[] Interpersonal = dsCharts.Tables[4].Select("QuestionGroup = 'Interpersonal Reslationships' AND SURVEYid = 47");
        foreach (DataRow dr in Interpersonal)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvIR += dr["Score"] + ",";
        }
        DataRow[] Numeric = dsCharts.Tables[4].Select("QuestionGroup = 'Numeric' AND SURVEYid = 47");
        foreach (DataRow dr in Numeric)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvN += dr["Score"] + ",";
        }
        DataRow[] drsecat = dsCharts.Tables[4].Select("QuestionGroup = 'Problem Behaviors - Section A (Teacher)' AND SURVEYid = 47");
        foreach (DataRow dr in drsecat)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvSectionA += dr["Score"] + ",";
        }
        DataRow[] drsecbt = dsCharts.Tables[4].Select("QuestionGroup = 'Problem Behaviors - Section B (Teacher)' AND SURVEYid = 47");
        foreach (DataRow dr in drsecbt)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvSectionB += dr["Score"] + ",";
        }
        DataRow[] drsecct = dsCharts.Tables[4].Select("QuestionGroup = 'Problem Behaviors - Section C (Teacher)' AND SURVEYid = 47");
        foreach (DataRow dr in drsecct)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvSectionC += dr["Score"] + ",";
        }
        DataRow[] Personal = dsCharts.Tables[4].Select("QuestionGroup = 'Personal' AND SURVEYid = 47");
        foreach (DataRow dr in Personal)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvP += dr["Score"] + ",";
        }
        DataRow[] Play = dsCharts.Tables[4].Select("QuestionGroup = 'Play and Leisure' AND SURVEYid = 47");
        foreach (DataRow dr in Play)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvPAL += dr["Score"] + ",";
        }
        DataRow[] Receptive = dsCharts.Tables[4].Select("QuestionGroup = 'Receptive' AND SURVEYid = 47");
        foreach (DataRow dr in Receptive)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvR += dr["Score"] + ",";
        }
        DataRow[] School = dsCharts.Tables[4].Select("QuestionGroup = 'School Community' AND SURVEYid = 47");
        foreach (DataRow dr in School)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvSC += dr["Score"] + ",";
        }
        DataRow[] Written = dsCharts.Tables[4].Select("QuestionGroup = 'Written' AND SURVEYid = 47");
        foreach (DataRow dr in Written)
        {
            if (dr["ScheduleDate"] != DBNull.Value && tvD.Contains(Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy")) == false)
            {
                tvD += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            }
            tvW += dr["Score"] + ",";
        }
        #endregion

        #region TeacherQuarterly
        DataRow[] drQuarterly = dsCharts.Tables[1].Select("SurveyID = 49");
        foreach (DataRow dr in drQuarterly)
        {
            dQuarterly += "'" + (dr["ScheduleDate"] != DBNull.Value ? Convert.ToDateTime(dr["ScheduleDate"]).ToString("MM/dd/yyyy") : "") + "',";
            tQuarterly += dr["Score"] + ",";
        }
        #endregion
    }
    #endregion

}

@functions{
    DataTable dtSurveys;
    public bool isSurveyAssigned(int surveyId, string roleType, string roleTypeOther = "", int? surveyIdOther = null) {
        bool isSurveyFound = false;
        if(dtSurveys.Rows.Count > 0)
        {
            foreach (DataRow dr in dtSurveys.Rows)
            {
                if(Convert.ToInt32(dr["SurveyId"]) == surveyId && (Convert.ToBoolean(dr["AssignedTo" + roleType]) == true || (roleTypeOther != "" && Convert.ToBoolean(dr["AssignedTo" + roleTypeOther]) == true)))
                {
                    isSurveyFound = true;
                }
                if (surveyIdOther.HasValue)
                {
                    if (Convert.ToInt32(dr["SurveyId"]) == surveyIdOther && (Convert.ToBoolean(dr["AssignedTo" + roleType]) == true || (roleTypeOther != "" && Convert.ToBoolean(dr["AssignedTo" + roleTypeOther]) == true)))
                    {
                        isSurveyFound = true;
                    }
                }
            }
        }

        return isSurveyFound;
    }
}






@if (role != "" && role != "Parent")
{
<script type="text/javascript">
    $(function () {
    //-----------------------------------------ABC VS SRS Line Chart----------------------------------------
    $('#ABCSRScontainer').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'ABC vs SRS <span style="font-size:13px;">(Parent vs Teacher)</span>'
        },
        subtitle: {
            text: '*Lower is Better'
        },
        xAxis: {
            categories: [@Html.Raw(dABC.Trim(','))]
            @*,plotLines: [
                @foreach(LifeEventChart objLEC in lstABCPTLifeEvents)
                {
                    @Html.Raw("{color: '#93CDDD', width: 2, value: ["+ objLEC.IndexOnChart +"], dashStyle: 'LongDash', label: { text: '"+ objLEC.EventsName +"' }, ID: 'LF"+ objLEC.IndexOnChart +"'},")
                }
            ]*@
        },
        yAxis: {
            max:200,
            plotLines: [{
                value: 195, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'SRS Max(195)', style: { "color": "#333333", "fontSize": "10px" } }
            },
            {
                value: 140, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'ABC Max(174)', style: { "color": "#333333", "fontSize": "10px" } }
            }],
          

        
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Parents ABC Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pABC.Trim(','))],
            color: '#7CB5EC'

        }, {
            name: 'Teachers ABC Scores',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(tABC.Trim(','))],
            color: '#434348'

        }, {
            name: 'Parents SRS Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pSRS.Trim(','))],
            color: '#7CB5EC'

        }, {
            name: 'Teachers SRS Scores',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(tSRS.Trim(','))],
            color: '#434348'
        }]
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------ABC Sub Categories-Teacher----------------------------------------
    $('#ABCSubCategoryTeacher').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Aberrant  Behaviour Checklist'
        },
        subtitle: {
            text: 'Teacher Quarterly Trend'
        },
        xAxis: {
            categories: [@Html.Raw(dtABCg.Trim(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Irritability/Agitation',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(astABCg.Trim(','))],
            color: '#73B3EF'

        }, {
            name: 'Letargy, Social Withdrawl',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(tsttABCg.Trim(','))],
            color: '#67F97C'

        }, {
            name: 'Sterotypic Behavior',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(untABCg.Trim(','))],
            color: '#FF9E4F'

        }, {
            name: 'Hyperactivity/Noncompliance',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(vstABCg.Trim(','))],
            color: '#8778EC'
        }

        , {
            name: 'Inappropriate Speech',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(qtABCg.Trim(','))],
            color: '#434348'
        }], yAxis: {
            max: 50,
            plotLines: [{
                value: 48, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'Max(48)', style: { "color": "#8778EC", "fontSize": "10px" } }
            },
            {
                value: 12, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'Max(12)', style: { "color": "#434348", "fontSize": "10px" } }
            },
            {
                value: 45, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", userHTML: true, text: ' <br> Max(45)', style: { "color": "#73B3EF", "fontSize": "10px" } }
            },
            {
                value: 48, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right",userHTML:true, text: ' <br> Max(48)', style: { "color": "#67F97C", "fontSize": "10px" } }
            },
            {
                value: 21, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'Max(21)', style: { "color": "#FF9E4F", "fontSize": "10px" } }
            }]
        }
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------Social Responsivness Scale(SRS) sub scale----------------------------------------
    $('#SRSSubScaleTeacher').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Social Responsivness Scale <span style="font-size:13px;">(sub scale)</span>'
        },
        subtitle: {
            text: '*Lower is Better'
        },
        xAxis: {
            categories: [@Html.Raw(dtSRSg.Trim(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Social Awareness',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(astSRSg.Trim(','))],
            color: '#73B3EF'

        }, {
            name: 'Social Cognition',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(tsttSRSg.Trim(','))],
            color: '#67F97C'

        }, {
            name: 'Social Communication',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(untSRSg.Trim(','))],
            color: '#FF9E4F'

        }, {
            name: 'Social Motivation',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(vstSRSg.Trim(','))],
            color: '#8778EC'
        }

        , {
            name: 'Restricted Interests and Repetitive Bahaviour',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(qtSRSg.Trim(','))],
            color: '#434348'
        }], yAxis: {
            max: 70,
            plotLines: [{
                value: 24, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", userHTML: true, text: ' <br> Max(24)', style: { "color": "#73B3EF", "fontSize": "10px" } }
            },
            {
                value: 36, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'Max(36)', style: { "color": "#67F97C", "fontSize": "10px" } }
            },
            {
                value: 63, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'Max(63)', style: { "color": "#FF9E4F", "fontSize": "10px" } }
            },
            {
                value: 36, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", userHTML: true, text: ' <br> Max(36)', style: { "color": "#8778EC", "fontSize": "10px"} }
            },
            {
                value: 36, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", userHTML: true, text: ' <br>.<br>.Max(36)', style: { "color": "#434348", "fontSize": "10px" } }
            }]
        }
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------Social Responsivness Scale(SRS) sub scale----------------------------------------
        $('#divTeacherVineland').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Vineland-3 (Teacher)'
        },
        subtitle: {
            text: 'Comprehensive Teacher Form'
        },
        xAxis: {
            categories: [@Html.Raw(tvD.Trim(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Coping Skills',
            marker: {
                symbol: 'circle'
            },
            data: [@Html.Raw(tvCS.Trim(','))],
            color: '#73B3EF'

        }, {
            name: 'Expressive',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(tvE.Trim(','))],
            color: '#67F97C'

        }
        , {
            name: 'Interpersonal Reslationships',
            marker: {
                symbol: 'triangle-down'
            },
            data: [@Html.Raw(tvIR.Trim(','))],
            color: '#434348'
        }
        , {
            name: 'Numeric',
            marker: {
                symbol: 'circle'
            },
            data: [@Html.Raw(tvN.Trim(','))],
            color: '#73B3EF'
        }
        , {
            name: 'Problem Behaviors - Section A',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(tvSectionA.Trim(','))],
            color: '#67F97C'
        }, {
            name: 'Problem Behaviors - Section B',
            marker: {
                symbol: 'triangle'
            },
            data: [@Html.Raw(tvSectionB.Trim(','))],
            color: '#FF9E4F'
        }
        , {
            name: 'Problem Behaviors - Section C',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(tvSectionC.Trim(','))],
            color: '#8778EC'
        }
        , {
            name: 'Personal',
            marker: {
                symbol: 'triangle-down'
            },
            data: [@Html.Raw(tvP.Trim(','))],
            color: '#434348'
        }
        , {
            name: 'Play and Leisure',
            marker: {
                symbol: 'circle'
            },
            data: [@Html.Raw(tvPAL.Trim(','))],
            color: '#73B3EF'
        }
    , {
        name: 'Receptive',
        marker: {
            symbol: 'square'
        },
        data: [@Html.Raw(tvR.Trim(','))],
        color: '#67F97C'
    }
    , {
        name: 'School Community',
        marker: {
            symbol: 'triangle'
        },
        data: [@Html.Raw(tvSC.Trim(','))],
        color: '#FF9E4F'
    }
    , {
        name: 'Written',
        marker: {
            symbol: 'diamond'
        },
        data: [@Html.Raw(tvW.Trim(','))],
        color: '#8778EC'
    }
        ]


            , yAxis: {

        }
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------Abbreviated Sensory Profile- Parent & Teacher----------------------------------------
    $('#AbbreviatedSensoryProfile').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Abbreviated Sensory Profile <span style="font-size:13px;">(Parent vs Teacher)</span>'
        },
        subtitle: {
            text: '*Lower is Better'
        },
        xAxis: {
            categories: [@Html.Raw(dASP.Trim(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Parent SPL',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pASP.Trim(','))],
            color: '#73B3EF'

        }, {
            name: 'Teacher SPL',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(tASP.Trim(','))],
            color: '#434348'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------Social Communication Questionnaire----------------------------------------
    $('#divSCQTeacher').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Social communication Questionnaire – life time'
        },
        subtitle: {
            //text: '*Higher is better'
        },
        xAxis: {
            categories: [@Html.Raw(dSCQTeacher.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(tSCQTeacher.TrimEnd(','))],
            color: '#00cc00'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------Academic Progress DSM Level 1----------------------------------------
    $('#AcademicProgressDSMLevel1').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Academic Progress'
        },
        subtitle: {
            text: '*High is better'
        },
        xAxis: {
            categories: [@Html.Raw(dAPRS.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(tAPRS.TrimEnd(','))],
            color: '#73B3EF'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Anxiety Depression and Mood Scale----TEACHER------------------------------------
    $('#tADAM').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Anxiety Depression and Mood Scale'
        },
        //subtitle: {
        //    text: '*Lower is Better'
        //},
        xAxis: {
            categories: [@Html.Raw(dtADAM.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(tADAM.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Vanderbilt Adhd Diagnostic Teacher Rating Scale----TEACHER------------------------------------
        $('#tVanderbilt').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Vanderbilt Adhd Diagnostic Teacher Rating Scale'
        },
        //subtitle: {
        //    text: '*Lower is Better'
        //},
        xAxis: {
            categories: [@Html.Raw(dtVanderbilt.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(tVanderbilt.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------PedsQL-Parent----------------------------------------
    $('#PedsQLParentS').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Peds Quality of Life (19yrs and above)'
        },
        subtitle: {
            text: '*Higher is better'
        },
        xAxis: {
            categories: [@Html.Raw(dPEDsqlS.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pPEDsqlS.TrimEnd(','))],
            color: '#00cc00'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------PedsQL-Parent----------------------------------------
    $('#divTQuerterly').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Quarterly Teacher Academic Progress'
        },
        xAxis: {
            categories: [@Html.Raw(dQuarterly.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(tQuarterly.TrimEnd(','))],
            color: '#00cc00'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Connor-Davidson Resilience Scale 10--Teacher--------------------------------------
        $('#divtConnor').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Connor-Davidson Resilience Scale 10'
        },
        //subtitle: {
        //    text: '*Lower is Better'
        //},
        xAxis: {
            categories: [@Html.Raw(dtConnor.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(tConnor.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Feedback Questionnaire--Teacher--------------------------------------
        $('#divtFeedback').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Feedback Questionnaire'
        },
        //subtitle: {
        //    text: 'Parents'
        //},
        xAxis: {
            categories: [@Html.Raw(dtFeed.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(tFeed.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>
}

<script type="text/javascript">
    $(function () {
    //-----------------------------------------ABC Sub Categories-Parents----------------------------------------
    $('#ABCSubCategoriesParent').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Aberrant  Behaviour Checklist'
        },
        subtitle: {
            text: '*Lower is Better'
        },
        xAxis: {
            categories: [@Html.Raw(dpABCg.Trim(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Irritability/Agitation',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(aspABCg.Trim(','))],
            color: '#73B3EF'

        }, {
            name: 'Letargy, Social Withdrawl',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(tstpABCg.Trim(','))],
            color: '#67F97C'

        }, {
            name: 'Sterotypic Behavior',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(unpABCg.Trim(','))],
            color: '#FF9E4F'

        }, {
            name: 'Hyperactivity/Noncompliance',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(vspABCg.Trim(','))],
            color: '#8778EC'
        }

        , {
            name: 'Inappropriate Speech',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(qpABCg.Trim(','))],
            color: '#434348'
        }],
        yAxis:{
            max: 50,
            plotLines: [{
                value: 48, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'Max(48)', style: { "color": "#8778EC", "fontSize": "10px" } }
            },
            {
                value: 12, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'Max(12)', style: { "color": "#434348", "fontSize": "10px" } }
            },
            {
                value: 45, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", userHTML: true, text: ' <br> Max(45)', style: { "color": "#73B3EF", "fontSize": "10px" } }
            },
            {
                value: 48, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", userHTML: true, text: ' <br> Max(48)', style: { "color": "#67F97C", "fontSize": "10px" } }
            },
            {
                value: 21, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'Max(21)', style: { "color": "#FF9E4F", "fontSize": "10px" } }
            }]
        }


    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------Social Responsivness Scale(SRS) sub scale----------------------------------------
    $('#SRSSubScale').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Social Responsivness Scale <span style="font-size:13px;">(sub scale)</span>'
        },
        subtitle: {
            text: '*Lower is Better'
        },
        xAxis: {
            categories: [@Html.Raw(dpSRSg.Trim(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Social Awareness',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(aspSRSg.Trim(','))],
            color: '#73B3EF'

        }, {
            name: 'Social Cognition',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(tstpSRSg.Trim(','))],
            color: '#67F97C'

        }, {
            name: 'Social Communication',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(unpSRSg.Trim(','))],
            color: '#FF9E4F'

        }, {
            name: 'Social Motivation',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(vspSRSg.Trim(','))],
            color: '#8778EC'
        }

        , {
            name: 'Restricted Interests and Repetitive Bahaviour',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(qpSRSg.Trim(','))],
            color: '#434348'
        }],yAxis: {
            max: 70,
            plotLines: [{
                value: 24, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", userHTML: true, text: ' <br> Max(24)', style: { "color": "#73B3EF", "fontSize": "10px" } }
            },
            {
                value: 36, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'Max(36)', style: { "color": "#67F97C", "fontSize": "10px" } }
            },
            {
                value: 63, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", text: 'Max(63)', style: { "color": "#FF9E4F", "fontSize": "10px" } }
            },
            {
                value: 36, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", userHTML: true, text: ' <br> Max(36)', style: { "color": "#8778EC", "fontSize": "10px" } }
            },
            {
                value: 36, color: 'black', dashStyle: 'shortdash', width: 1, label: { align: "right", userHTML: true, text: ' <br>.<br>.Max(36)', style: { "color": "#434348", "fontSize": "10px" } }
            }]
        }
         


    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------Social Responsivness Scale(SRS) sub scale----------------------------------------
        $('#divParentVineland').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Vineland-3 (Parent)'
        },
        subtitle: {
            text: 'Comprehensive Parent/Caregiver Form'
        },
        xAxis: {
            categories: [@Html.Raw(pvD.Trim(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Adapting',
            marker: {
                symbol: 'circle'
            },
            data: [@Html.Raw(pvAdapting.Trim(','))],
            color: '#73B3EF'

        }, {
            name: 'Caring For Home',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pvCFH.Trim(','))],
            color: '#67F97C'

        }, {
            name: 'Caring For Self',
            marker: {
                symbol: 'triangle'
            },
            data: [@Html.Raw(pvCFS.Trim(','))],
            color: '#FF9E4F'

        }, {
            name: 'Listening And Understanding',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(pvLAU.Trim(','))],
            color: '#8778EC'
        }

        , {
            name: 'Living In Community',
            marker: {
                symbol: 'triangle-down'
            },
            data: [@Html.Raw(pvLIC.Trim(','))],
            color: '#434348'
        }
        , {
            name: 'Playing And Using Leisure Time',
            marker: {
                symbol: 'circle'
            },
            data: [@Html.Raw(pvPAULT.Trim(','))],
            color: '#73B3EF'
        }
        , {
            name: 'Problem Behaviors - Section A',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pvSectionA.Trim(','))],
            color: '#67F97C'
        }, {
            name: 'Problem Behaviors - Section B',
            marker: {
                symbol: 'triangle'
            },
            data: [@Html.Raw(pvSectionB.Trim(','))],
            color: '#FF9E4F'
        }
        , {
            name: 'Problem Behaviors - Section C',
            marker: {
                symbol: 'diamond'
            },
            data: [@Html.Raw(pvSectionC.Trim(','))],
            color: '#8778EC'
        }
        , {
            name: 'Reading and Writing',
            marker: {
                symbol: 'triangle-down'
            },
            data: [@Html.Raw(pvRAW.Trim(','))],
            color: '#434348'
        }
        , {
            name: 'Relating To Others',
            marker: {
                symbol: 'circle'
            },
            data: [@Html.Raw(pvRTO.Trim(','))],
            color: '#73B3EF'
        }
    , {
        name: 'Talking',
        marker: {
            symbol: 'square'
        },
        data: [@Html.Raw(pvT.Trim(','))],
        color: '#67F97C'
    }    
        ]


            , yAxis: {
            
        }
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------PedsQL-Parent----------------------------------------
    $('#PedsQLParent').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Peds Quality of Life'
        },
        subtitle: {
            text: '*Higher is better'
        },
        xAxis: {
            categories: [@Html.Raw(dPEDsql.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pPEDsql.TrimEnd(','))],
            color: '#00cc00'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------Social Communication Questionnaire----------------------------------------
    $('#divSCQ').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Social communication Questionnaire – life time'
        },
        subtitle: {
            //text: '*Higher is better'
        },
        xAxis: {
            categories: [@Html.Raw(dSCQ.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pSCQ.TrimEnd(','))],
            color: '#00cc00'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------CaregiverStrainQuesionaire----------------------------------------
    $('#CaregiverStrainQuesionaire').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Caregiver Strain Quesionnaire'
        },
        subtitle: {
            text: '*Lower is Better'
        },
        xAxis: {
            categories: [@Html.Raw(dCareGiver.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pCareGiver.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------CaregiverStrainQuesionaire----------------------------------------
    $('#FamilyEmpowementScale').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Family Empowerment Scale'
        },
        subtitle: {
            text: '*Higher is better'
        },
        xAxis: {
            categories: [@Html.Raw(dPES.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pPES.TrimEnd(','))],
            color: '#00cc00'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
    //-----------------------------------------GI Severity Index----------------------------------------
    $('#GISeverityIndex').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'GI Severity Index'
        },
        subtitle: {
            text: '*Lower is Better'
        },
        xAxis: {
            categories: [@Html.Raw(dGSI.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pGSI.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Anxiety Depression and Mood Scale--PARENT--------------------------------------
    $('#pADAM').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Anxiety Depression and Mood Scale'
        },
        //subtitle: {
        //    text: '*Lower is Better'
        //},
        xAxis: {
            categories: [@Html.Raw(dpADAM.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pADAM.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Vanderbilt Adhd Diagnostic Teacher Rating Scale--PARENT--------------------------------------
        $('#pVanderbilt').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Vanderbilt Adhd Diagnostic Teacher Rating Scale'
        },
        //subtitle: {
        //    text: '*Lower is Better'
        //},
        xAxis: {
            categories: [@Html.Raw(dpVanderbilt.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pVanderbilt.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Short Language Profile--PARENT--------------------------------------
        $('#divpSLP').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Short Language Profile '
        },
        //subtitle: {
        //    text: '*Lower is Better'
        //},
        xAxis: {
            categories: [@Html.Raw(dSLP.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pSLP.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Insomnia Severity Index--PARENT--------------------------------------
        $('#divpInsomn').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Insomnia Severity Index'
        },
        //subtitle: {
        //    text: '*Lower is Better'
        //},
        xAxis: {
            categories: [@Html.Raw(dInsom.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pInsom.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Connor-Davidson Resilience Scale 10--PARENT--------------------------------------
        $('#divpConnor').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Connor-Davidson Resilience Scale 10'
        },
        //subtitle: {
        //    text: 'Parents'
        //},
        xAxis: {
            categories: [@Html.Raw(dConnor.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pConnor.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Feedback Questionnaire--PARENT--------------------------------------
        $('#divpFeedback').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Feedback Questionnaire'
        },
        //subtitle: {
        //    text: 'Parents'
        //},
        xAxis: {
            categories: [@Html.Raw(dpFeed.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pFeed.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>

<script type="text/javascript">
    $(function () {
        //-----------------------------------------Parent Assessment Summary--PARENT--------------------------------------
        $('#divpPAS').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: 'Parent Assessment Summary'
        },
        //subtitle: {
        //    text: 'Parents'
        //},
        xAxis: {
            categories: [@Html.Raw(dpPAS.TrimEnd(','))]
        },
        yAxis: {
            title: {
                text: 'Scores'
            },
            labels: {
                formatter: function () {
                    return this.value + '';
                }
            }
        },
        tooltip: {
            crosshairs: true,
            shared: true
        },
        plotOptions: {
            spline: {
                marker: {
                    radius: 4,
                    lineColor: '#666666',
                    lineWidth: 1
                }
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Scores',
            marker: {
                symbol: 'square'
            },
            data: [@Html.Raw(pPAS.TrimEnd(','))],
            color: '#cc0000'

        }],
    });
        //-----------------------------------------End----------------------------------------
    });
</script>



<style type="text/css">
    .voffset {
        margin-top: 10px;
    }
    .graphTabs ul{
        margin: 0px;
        list-style: none;
        padding: 0px;        
    }
    .graphTabs li a{
        text-align: left;        
        border: 1px solid transparent;
        padding: 10px 15px;
        display: block;
        position: relative;
        text-shadow: none;
        text-decoration: none;
        color: #333;
        min-width: 141px;
        position: relative;        
        z-index: 1111;
        background-color: #FFF;
    }
    .graphTabs li:first-child a{        
        /*border-top: solid 1px #CCC;*/
    }
    .graphTabs li a:hover{
        background-color: #c7d1d6;        
    }
    .graphTabs li a.selected{
        /*background-color: #c7d1d6;*/
        border-right:none;
        cursor: default;
        border-top: solid 1px #CCC;
        border-left: solid 1px #CCC;
        border-bottom: solid 1px #CCC;
        right: -1px;
    }
    .gDetails .surveygraph{
        border-bottom: solid 1px #EDEDED;
    }
</style>

<h3 style="text-transform:capitalize;">@studyName @(childNamets != "" ? "(" + childNamets + ")" : "") - Statistical Analysis</h3>


@if (childId == 0 || childId != 0)
{
    var c = dsCharts.Tables[5].Rows.Count;
    DataRow[] drABCGroup = dsCharts.Tables[5].Select("SURVEYid = 4");
    string temp = "{name: '#name#',marker: {symbol: 'circle'},data: [#min#, #max# ]}",
           ABCg = "";
    DataRow[] drSRSGroup = dsCharts.Tables[5].Select("SURVEYid = 5");
    string SRSg = "";

    foreach (DataRow dr in drABCGroup)
    {
        ABCg += temp.Replace("#name#", dr["Name"].ToString()).Replace("#min#", dr["minScore"].ToString()).Replace("#max#", dr["maxScore"].ToString()) + ",";
    }
    foreach (DataRow dr in drSRSGroup)
    {
        SRSg += temp.Replace("#name#", dr["Name"].ToString()).Replace("#min#", dr["minScore"].ToString()).Replace("#max#", dr["maxScore"].ToString()) + ",";
    }
    ABCg = ABCg.TrimEnd(',');
    SRSg = SRSg.TrimEnd(',');

    
        <script type="text/javascript">
    $(function () {
        //-----------------------------------------Abbreviated Sensory Profile- Parent & Teacher----------------------------------------
            $('.dvABCGroup').highcharts({
                chart: {
                    type: 'spline',
                    backgroundColor: null
                },
                title: {
                    text: 'Aberrant  Behaviour Checklist <span style="font-size:13px;">(Base line vs Current)</span>'
                },
                subtitle: {
                    text: '*Lower is Better'
                },
                xAxis: {
                    categories: ['Base Line<br>*Study Start', 'Current']
                },
                yAxis: {
                    title: {
                        text: 'Scores'
                    },
                    labels: {
                        formatter: function () {
                            return this.value + '';
                        }
                    }
                },
                tooltip: {
                    crosshairs: true,
                    shared: true
                },
                plotOptions: {
                    spline: {
                        marker: {
                            radius: 4,
                            lineColor: '#666666',
                            lineWidth: 1
                        }
                    }
                },
                credits: {
                    enabled: false
                },
                series: [@Html.Raw(ABCg)
                    ]
        });
        //-----------------------------------------End----------------------------------------
    });
        </script>
    

    
        <script type="text/javascript">
            $(function(){
                //-----------------------------------------Abbreviated Sensory Profile- Parent & Teacher----------------------------------------
                $('.dvSRSGroup').highcharts({
                    chart: {
                        type: 'spline',
                        backgroundColor: null
                    },
                    title: {
                        text: 'Social Responsivness Scale <span style="font-size:13px;">(Base line vs Current)</span>'
                    },
                    subtitle: {
                        text: '*Lower is Better'
                    },
                    xAxis: {
                        categories: ['Base Line<br>*Study Start', 'Current']
                    },
                    yAxis: {
                        title: {
                            text: 'Scores'
                        },
                        labels: {
                            formatter: function () {
                                return this.value + '';
                            }
                        }
                    },
                    tooltip: {
                        crosshairs: true,
                        shared: true
                    },
                    plotOptions: {
                        spline: {
                            marker: {
                                radius: 4,
                                lineColor: '#666666',
                                lineWidth: 1
                            }
                        }
                    },
                    credits: {
                        enabled: false
                    },
                    series: [@Html.Raw(SRSg)
                    ]
                });
                //-----------------------------------------End----------------------------------------
            });
        </script>
    





    var cTeacher = dsCharts.Tables[6].Rows.Count;
    DataRow[] drABCGroupTeacher = dsCharts.Tables[6].Select("SURVEYid = 4");
    string tempTeacher = "{name: '#name#',marker: {symbol: 'circle'},data: [#min#, #max# ]}",
           ABCgTeacher = "";
    DataRow[] drSRSGroupTeacher = dsCharts.Tables[6].Select("SURVEYid = 5");
    string SRSgTeacher = "";

    foreach (DataRow dr in drABCGroupTeacher)
    {
        ABCgTeacher += tempTeacher.Replace("#name#", dr["Name"].ToString()).Replace("#min#", dr["minScore"].ToString()).Replace("#max#", dr["maxScore"].ToString()) + ",";
    }
    foreach (DataRow dr in drSRSGroupTeacher)
    {
        SRSgTeacher += tempTeacher.Replace("#name#", dr["Name"].ToString()).Replace("#min#", dr["minScore"].ToString()).Replace("#max#", dr["maxScore"].ToString()) + ",";
    }
    ABCgTeacher = ABCgTeacher.TrimEnd(',');
    SRSgTeacher = SRSgTeacher.TrimEnd(',');

    
        <script type="text/javascript">
            $(function () {
                //-----------------------------------------Abbreviated Sensory Profile- Parent & Teacher----------------------------------------
                $('.dvABCGroupTeacher').highcharts({
                    chart: {
                        type: 'spline',
                        backgroundColor: null
                    },
                    title: {
                        text: 'Aberrant  Behaviour Checklist <span style="font-size:13px;">(Base line vs Current)</span>'
                    },
                    subtitle: {
                        text: '*Lower is Better'
                    },
                    xAxis: {
                        categories: ['Base Line<br>*Study Start', 'Current']
                    },
                    yAxis: {
                        title: {
                            text: 'Scores'
                        },
                        labels: {
                            formatter: function () {
                                return this.value + '';
                            }
                        }
                    },
                    tooltip: {
                        crosshairs: true,
                        shared: true
                    },
                    plotOptions: {
                        spline: {
                            marker: {
                                radius: 4,
                                lineColor: '#666666',
                                lineWidth: 1
                            }
                        }
                    },
                    credits: {
                        enabled: false
                    },
                    series: [@Html.Raw(ABCgTeacher)
                    ]
                });
                //-----------------------------------------End----------------------------------------
            });
        </script>
    
   
        <script type="text/javascript">
            $(function () {
            //-----------------------------------------Abbreviated Sensory Profile- Parent & Teacher----------------------------------------
        $('.dvSRSGroupTeacher').highcharts({
                chart: {
                    type: 'spline',
                    backgroundColor: null
                },
                title: {
                    text: 'Social Responsivness Scale <span style="font-size:13px;">(Base line vs Current)</span>'
                },
                subtitle: {
                    text: '*Lower is Better'
                },
                xAxis: {
                    categories: ['Base Line<br>*Study Start', 'Current']
                },
                yAxis: {
                    title: {
                        text: 'Scores'
                    },
                    labels: {
                        formatter: function () {
                            return this.value + '';
                        }
                    }
                },
                tooltip: {
                    crosshairs: true,
                    shared: true
                },
                plotOptions: {
                    spline: {
                        marker: {
                            radius: 4,
                            lineColor: '#666666',
                            lineWidth: 1
                        }
                    }
                },
                credits: {
                    enabled: false
                },
                series: [@Html.Raw(SRSgTeacher)
                ]
            });
            //-----------------------------------------End----------------------------------------
    });
        </script>
    

}

<table cellpadding="0" cellspacing="0" style="width:100%;">
    <tr>
        <td style="width: 14%;vertical-align: top;">
            <div class="graphTabs" style="margin-top: 40px;">                
                    <ul class="graphSections">
                        <li>
                            <a class="selected" href="#3" onclick="showGraphsSection(this, 1);">Parent</a>
                        </li>
                        @if (role != "" && role != "Parent")
                        {
                            <li>
                                <a href="#4" onclick="showGraphsSection(this, 2);">Teacher</a>
                            </li>
                            <li>
                                <a href="#5" onclick="showGraphsSection(this, 3);">Parent/Teacher</a>
                            </li>                            
                            <li style="display:none;">
                                <a href="#6" onclick="showGraphsSection(this, 4);">Weekly Teacher</a>
                            </li>
                            <li>
                                <a href="#7" onclick="showGraphsSection(this, 5);">Life Events</a>
                            </li>
                            <li>
                                <a href="#8" onclick="showGraphsSection(this, 6);">Student</a>
                            </li>
                        }
                    </ul>
                </div>           
        </td>
        <td style="width: 84%;border: solid 1px #CCC;">
            <div class="gDetails">
                <div class="row parentdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                    @if (isSurveyAssigned(4, "Parent"))
                    {
                        <div class="col-sm-12"><div class="dvABCGroup surveygraph" surveyid="4"></div></div>
                    }                    
                    @if (isSurveyAssigned(5, "Parent"))
                    {
                        <div class="col-sm-12"><div class="dvSRSGroup surveygraph" surveyid="5"></div></div>
                    }                    
                </div>
                @if (role != "" && role != "Parent")
                {
                    <div class="row teacherdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                        @if (isSurveyAssigned(4, "Teacher"))
                        {
                            <div class="col-sm-12"><div class="dvABCGroupTeacher surveygraph" surveyid="4"></div></div>
                            isAssignedToTeacher = true;
                        }                        
                        @if (isSurveyAssigned(5, "Teacher"))
                        {
                            <div class="col-sm-12"><div class="dvSRSGroupTeacher surveygraph" surveyid="5"></div></div>
                            isAssignedToTeacher = true;
                        }                        
                    </div>

                    <div class="row parentteacherdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;border-bottom:none;">
                        @if (isSurveyAssigned(4, "Parent", "Teacher", 5))
                        {
                            <div class="col-sm-12 parentteacher" style="background-color:transparent;">
                                <div id="ABCSRScontainer" style="min-width: 310px; height: 400px; margin: 0 auto" class="surveygraph"></div>
                            </div>
                        }                        
                        @if (isSurveyAssigned(1, "Parent", "Teacher"))
                        {
                            <div class="col-sm-12 parentteacher" style="background-color:transparent;">
                                <div id="AbbreviatedSensoryProfile" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="1" class="surveygraph"></div>
                            </div>
                        }                        
                    </div>
                }
                

                

                <div class="row voffset parentdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                    @if (isSurveyAssigned(4, "Parent"))
                    {
                        <div class="col-sm-12 parent" style="background-color:transparent;">
                            <div id="ABCSubCategoriesParent" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="4" class="surveygraph"></div>
                        </div>
                    }                    
                    @if (isSurveyAssigned(5, "Parent"))
                    {
                        <div class="col-sm-12 parent" style="background-color:transparent;">
                            <div id="SRSSubScale" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="5" class="surveygraph"></div>
                        </div>
                    }                    
                </div>

                @if (role != "" && role != "Parent")
                {
                    <div class="row voffset teacherdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                        @if (isSurveyAssigned(4, "Teacher"))
                        {
                            <div class="col-sm-12 teacher" style="background-color:transparent;">
                                <div id="ABCSubCategoryTeacher" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="4" class="surveygraph"></div>
                            </div>
                            isAssignedToTeacher = true;
                        }                        
                        @if (isSurveyAssigned(5, "Teacher"))
                        {
                            <div class="col-sm-12 teacher" style="background-color:transparent;">
                                <div id="SRSSubScaleTeacher" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="5" class="surveygraph"></div>
                            </div>
                            isAssignedToTeacher = true;
                        }
                        @*<div class="col-sm-6" style="background-color:transparent;">
                                <div id="ShortLanguageProfile" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                            </div>*@
                    </div>

                    <div class="row voffset studentdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;border-bottom:none;">
                        @if (isSurveyAssigned(45, "Student"))
                        {
                            <div class="col-sm-12 student" style="background-color:transparent;">
                                <div id="PedsQLParentS" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="45" class="surveygraph"></div>
                            </div>
                        }
                        else {
                            <div style="text-align: center;"><p>There is no survey assigned to students in this study.</p></div>
                        }
                    </div>
                }
                

                <div class="row voffset parentdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">                    
                    @if (isSurveyAssigned(6, "Parent"))
                    {
                        <div class="col-sm-12 parent" style="background-color:transparent;">
                            <div id="PedsQLParent" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="6" class="surveygraph"></div>
                        </div>
                    }                    
                    @if (isSurveyAssigned(2, "Parent"))
                    {
                        <div class="col-sm-12 parent" style="background-color:transparent;">
                            <div id="CaregiverStrainQuesionaire" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="2" class="surveygraph"></div>
                        </div>
                    }                    
                </div>

                

                @*<div class="row voffset" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                    <div class="col-sm-6" style="background-color:transparent;">
                    <div id="PedsQLParentReport" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                    </div>
                </div>*@

                <div class="row voffset parentdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                    @if (isSurveyAssigned(14, "Parent"))
                    {
                        <div class="col-sm-12 parent" style="background-color:transparent;">
                            <div id="FamilyEmpowementScale" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="14" class="surveygraph"></div>
                        </div>
                    }                    
                    @if (isSurveyAssigned(3, "Parent"))
                    {
                        <div class="col-sm-12 parent" style="background-color:transparent;">
                            <div id="GISeverityIndex" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="3" class="surveygraph"></div>
                        </div>
                    }                    
                </div>

                @if (role != "" && role != "Parent")
                {
                    <div class="row voffset teacherdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                        @if (isSurveyAssigned(27, "Teacher"))
                        {
                            <div class="col-sm-12 teacher" style="background-color:transparent;">
                                <div id="AcademicProgressDSMLevel1" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="27" class="surveygraph"></div>
                            </div>
                            isAssignedToTeacher = true;
                        }
                        @*<div class="col-sm-6" style="background-color:transparent;">
                                <div id="levelchangesforChild" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                            </div>*@
                        @if (isSurveyAssigned(11, "Teacher"))
                        {
                            <div class="col-sm-12" style="background-color:transparent;">
                                <div id="divSCQTeacher" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="11" class="surveygraph"></div>
                            </div>
                            isAssignedToTeacher = true;
                        }                        
                    </div>
                }
                

                @if (role != "" && role != "Parent")
                {
                    <div class="row voffset weeklydiv" style="border-bottom:none;">
                        @{Html.RenderPartial("~/Views/Home/_WeeklyChart.cshtml", new ViewDataDictionary { { "studyId", studyId }, { "childIdts", childId } });}

                    </div>
                    <div class="row voffset lifeeventsdiv" style="border-bottom:none;">
                        @{Html.RenderPartial("~/Views/Home/_LifeEventsChart.cshtml", new ViewDataDictionary { { "studyId", studyId }, { "childIdts", childId } });}
                    </div>
                }
                

                <div class="row parentdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                    @if (isSurveyAssigned(35, "Parent"))
                    {
                        <div class="col-sm-12"><div id="pADAM" surveyid="35" class="surveygraph"></div></div>
                    }                    
                    @if (isSurveyAssigned(34, "Parent"))
                    {
                        <div class="col-sm-12"><div id="pVanderbilt" surveyid="34" class="surveygraph"></div></div>
                    }                    
                </div>

                @if (role != "" && role != "Parent")
                {
                    <div class="row teacherdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                        @if (isSurveyAssigned(35, "Teacher"))
                        {
                            <div class="col-sm-12"><div id="tADAM" surveyid="35" class="surveygraph"></div></div>
                            isAssignedToTeacher = true;
                        }                        
                        @if (isSurveyAssigned(34, "Teacher"))
                        {
                            <div class="col-sm-12"><div id="tVanderbilt" surveyid="34" class="surveygraph"></div></div>
                            isAssignedToTeacher = true;
                        }                        
                    </div>
                }
                

                <div class="row voffset parentdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                    @if (isSurveyAssigned(11, "Parent"))
                    {
                        <div class="col-sm-12"><div id="divSCQ" surveyid="11" class="surveygraph"></div></div>
                    }                    
                    @if (isSurveyAssigned(10, "Parent"))
                    {
                        <div class="col-sm-12"><div id="divpSLP" surveyid="10" class="surveygraph"></div></div>
                    }                    
                </div>

                <div class="row voffset parentdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                    @if (isSurveyAssigned(12, "Parent"))
                    {
                        <div class="col-sm-12"><div id="divpInsomn" surveyid="12" class="surveygraph"></div></div>
                    }                    
                    @if (isSurveyAssigned(13, "Parent"))
                    {
                        <div class="col-sm-12"><div id="divpConnor" surveyid="13" class="surveygraph"></div></div>
                    }                    
                </div>

                <div class="row voffset parentdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                    @if (isSurveyAssigned(15, "Parent"))
                    {
                        <div class="col-sm-12"><div id="divpFeedback" surveyid="15" class="surveygraph"></div></div>
                    }                    
                    @if (isSurveyAssigned(48, "Parent"))
                    {
                        <div class="col-sm-12"><div id="divpPAS" surveyid="48" class="surveygraph"></div></div>
                    }                    
                </div>
                @*<div class="row voffset">
                    <div class="col-sm-6" style="background-color:transparent;">
                    <div id="WeeklyProgressScroe" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                </div>
                    <div class="col-sm-6" style="background-color:transparent;">
                    <div id="levelchangesforChild2312" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                </div>
                </div>*@
                <div class="row voffset parentdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;border-bottom:none;">
                    @if (isSurveyAssigned(46, "Parent"))
                    {
                        <div class="col-sm-12"><div id="divParentVineland" class="surveygraph" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="46"></div></div>
                    }                    
                </div>

                @if (role != "" && role != "Parent")
                {                    
                    <div class="row teacherdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                        @if (isSurveyAssigned(49, "Teacher"))
                        {
                            <div class="col-sm-12"><div id="divTQuerterly" surveyid="49" class="surveygraph"></div></div>
                            isAssignedToTeacher = true;
                        }                        
                        @if (isSurveyAssigned(13, "Teacher"))
                        {
                            <div class="col-sm-12"><div id="divtConnor" surveyid="13" class="surveygraph"></div></div>
                            isAssignedToTeacher = true;
                        }                        
                    </div>

                    <div class="row teacherdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;">
                        @if (isSurveyAssigned(15, "Teacher"))
                        {
                            <div class="col-sm-12"><div id="divtFeedback" surveyid="15" class="surveygraph"></div></div>
                            isAssignedToTeacher = true;
                        }
                    </div>

                    <div class="row voffset teacherdiv" style="overflow:hidden;padding-top:8px;margin:0px 0px 10px 0px;border-bottom:none;">
                        @if (isSurveyAssigned(47, "Teacher"))
                        {
                            <div class="col-sm-12"><div id="divTeacherVineland" class="surveygraph" style="min-width: 310px; height: 400px; margin: 0 auto" surveyid="47"></div></div>
                            isAssignedToTeacher = true;
                        }     
                        @if (isAssignedToTeacher == false)
                        {
                            <div style="text-align: center;"><p>There is no survey assigned to teachers in this study.</p></div>
                        }
                    </div>
                }
                
                
            </div>
        </td>
    </tr>
</table>

<script type="text/javascript">
    $(function () {
        $(".teacherdiv").hide();
        $(".parentteacherdiv").hide();
        $(".studentdiv").hide();
        $(".weeklydiv").hide();
        $(".lifeeventsdiv").hide();
    });

    function showGraphsSection(elem, type) {
        $(".parentdiv").hide();
        $(".teacherdiv").hide();
        $(".parentteacherdiv").hide();
        $(".weeklydiv").hide();
        $(".lifeeventsdiv").hide();
        $(".studentdiv").hide();

        $(".graphTabs a").removeClass("selected");
        $(elem).addClass("selected");

        if (type == 1) {
            $(".parentdiv").show();
        }
        else if (type == 2) {
            $(".teacherdiv").show();
        }
        else if (type == 3) {
            $(".parentteacherdiv").show();
        }
        else if (type == 4) {
            $(".weeklydiv").show();
        }
        else if (type == 5) {
            $(".lifeeventsdiv").show();
        }
        else if (type == 6) {
            $(".studentdiv").show();
        }

        //$(window).resize();
    }

    function setGraphsVisibility() {
        var arr = "";
        if (arr.length > 0) {
            $(".surveygraph").each(function (index, obj) {
                var surveyId = $(obj).attr("surveyid");
                var isSurveyFound = false;
                if (surveyId != null && surveyId != undefined) {
                    for (var i = 0; i < arr.length; i++) {

                        if (surveyId == arr[i]) {
                            isSurveyFound = true;
                            break;
                        }
                    }
                    if (isSurveyFound == false) {
                        $(obj).parent("div.col-sm-12").hide();
                    }
                }
            });
        }        
    }
</script>
