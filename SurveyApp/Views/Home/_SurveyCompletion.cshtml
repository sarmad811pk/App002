@using SurveyApp.Models;
@using System.Data;

@{
    DataSet dsCompletion;
    int studyId = 0;
    string currParent = "", currTeacher = "", prevParent = "", prevTeacher = "";

    dsCompletion = SurveyApp.DataHelper.DashboardGetSchedulesForUserRoles(Model);
    studyId = Model == null ? 0 : Convert.ToInt32(Model);

    #region CurrentPrriod
    if (dsCompletion != null && dsCompletion.Tables != null && dsCompletion.Tables.Count > 1)
    {
        string currentDate = DateTime.Now.ToString("MM/dd/yyyy");
        /* PARENT */
        #region ParentGraph
        int completed = 0, partial = 0, notstarted = 0;
        DataRow[] drCount = dsCompletion.Tables[0].Select("'" + currentDate + "'  < ScheduleDate");
        if (drCount.Length > 0)
        {
            foreach (DataRow dr in drCount)
            {
                if (dr["Percentage"] != DBNull.Value)
                {
                    int percent = Convert.ToInt32(dr["Percentage"].ToString().Replace("%", ""));
                    if (percent == 100)
                    {
                        completed++;
                    }
                    else if (percent > 0 && percent < 100)
                    {
                        partial++;
                    }
                    else if (percent == 0)
                    {
                        notstarted++;
                    }
                }
                else
                {
                    notstarted++;
                }
            }
        }
        currParent = "['Completed', " + completed + "], ['Partially Completed', " + partial + "],['Not Started', " + notstarted + "]";
        #endregion

        /* TEACHER */
        #region TeacherGraph
        int completedTeacher = 0, partialTeacher = 0, notstartedTeacher = 0;
        DataRow[] drTeacherCount = dsCompletion.Tables[1].Select("'" + currentDate + "'  < ScheduleDate");
        if (drTeacherCount.Length > 0)
        {
            foreach (DataRow dr in drTeacherCount)
            {
                if (dr["Percentage"] != DBNull.Value)
                {
                    int percent = Convert.ToInt32(dr["Percentage"].ToString().Replace("%", ""));
                    if (percent == 100)
                    {
                        completedTeacher++;
                    }
                    else if (percent > 0 && percent < 100)
                    {
                        partialTeacher++;
                    }
                    else if (percent == 0)
                    {
                        notstartedTeacher++;
                    }
                }
                else
                {
                    notstartedTeacher++;
                }
            }
        }
        currTeacher = "['Completed', " + completedTeacher + "], ['Partially Completed', " + partialTeacher + "],['Not Started', " + notstartedTeacher + "]";
        #endregion
    }
    #endregion

    #region PreviousPrriod
    if (dsCompletion != null && dsCompletion.Tables != null && dsCompletion.Tables.Count > 1)
    {
        string currentDate = DateTime.Now.ToString("MM/dd/yyyy");
        /* PARENT */
        #region ParentGraph
        int completedPrevious = 0, partialPrevious = 0, notstartedPrevious = 0;
        DataRow[] drCount = dsCompletion.Tables[0].Select("'" + currentDate + "' >= ScheduleDate");
        if (drCount.Length > 0)
        {
            foreach (DataRow dr in drCount)
            {
                if (dr["Percentage"] != DBNull.Value)
                {
                    int percent = Convert.ToInt32(dr["Percentage"].ToString().Replace("%", ""));
                    if (percent == 100)
                    {
                        completedPrevious++;
                    }
                    else if (percent > 0 && percent < 100)
                    {
                        partialPrevious++;
                    }
                    else if (percent == 0)
                    {
                        notstartedPrevious++;
                    }
                }
                else
                {
                    notstartedPrevious++;
                }
            }
        }
        prevParent = "['Completed', " + completedPrevious + "], ['Partially Completed', " + partialPrevious + "],['Not Started', " + notstartedPrevious + "]";
        #endregion

        /* TEACHER */
        #region TeacherGraph
        int completedTeacherPrevious = 0, partialTeacherPrevious = 0, notstartedTeacherPrevious = 0;
        DataRow[] drTeacherCount = dsCompletion.Tables[1].Select("'" + currentDate + "' >= ScheduleDate");
        if (drTeacherCount.Length > 0)
        {
            foreach (DataRow dr in drTeacherCount)
            {
                if (dr["Percentage"] != DBNull.Value)
                {
                    int percent = Convert.ToInt32(dr["Percentage"].ToString().Replace("%", ""));
                    if (percent == 100)
                    {
                        completedTeacherPrevious++;
                    }
                    else if (percent > 0 && percent < 100)
                    {
                        partialTeacherPrevious++;
                    }
                    else if (percent == 0)
                    {
                        notstartedTeacherPrevious++;
                    }
                }
                else
                {
                    notstartedTeacherPrevious++;
                }
            }
        }
        prevTeacher = "['Completed', " + completedTeacherPrevious + "], ['Partially Completed', " + partialTeacherPrevious + "],['Not Started', " + notstartedTeacherPrevious + "]";
        #endregion
    }
    #endregion

}


<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>

<style type="text/css">
    .graphInfo{padding: 0px 0px 0px 30px;}
    .graphDiv{width: 46%; height: 200px; margin: 0 6px;display: inline-block;}
</style>

<div class="completion">
    <h3>Survey Completion</h3>
    <div style="border:solid 1px #CCC;">
        <table style="width:100%;background-color: #FFF;">
            <tr>
                <td style="width: 18%;">
                    <div class="graphInfo">
                        <h4 style="color:#33B86C;"><i class="ion-checkmark"></i>&nbsp;Completed</h4>
                        <h4 style="color:#286A66;"><i class="ion-android-more-horizontal"></i>&nbsp;Partially Completed</h4>
                        <h4 style="color: #D7524B;"><i class="ion-minus-round"></i>&nbsp;Not Started</h4>
                    </div>
                </td>
                <td style="width: 40%; text-align: right;">
                    <div id="previousPeriodParent" class="graphDiv"></div>
                    <div id="previousPeriodTeacher" class="graphDiv"></div>
                </td>
                <td style="width: 40%; text-align: right;">
                    <div id="currentPeriodParent" class="graphDiv"></div>
                    <div id="currentPeriodTeacher" class="graphDiv"></div>
                </td>
            </tr>
        </table>
    </div>
    

</div>

<script type="text/javascript">
$(function () {
    var colors = ['#33B86C', '#286A66', '#D7524B']; //F46F66
    /* PREVIOUS PERIOD PARENT */
    $('#previousPeriodParent').highcharts({
        chart: {
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            plotBackgroundColor: null,
            plotBorderWidth: 0,
            plotShadow: false
        },
        colors: colors,
        title: {
            text: 'Previous Period <br/> Parent',
            align: 'center',
            verticalAlign: 'middle',
            y: -70
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
            pie: {
                size: '140%',
                dataLabels: {
                    enabled: true,
                    distance: -50,
                    style: {
                        fontWeight: 'bold',
                        color: 'white',
                        textShadow: '0px 1px 2px black'
                    }
                },
                startAngle: -90,
                endAngle: 90,
                center: ['50%', '114%']
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            type: 'pie',
            name: 'Share',
            innerSize: '50%',
            data: [@Html.Raw(prevParent),
                {
                    name: 'There are no previously scheduled surveys available',
                    y: 0.2,
                    dataLabels: {
                        enabled: false
                    }
                }
            ]
        }]
    });

    /* PREVIOUS PERIOD TEACHER */
    $('#previousPeriodTeacher').highcharts({
        chart: {
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            plotBackgroundColor: null,
            plotBorderWidth: 0,
            plotShadow: false
        },
        colors: colors,
        title: {
            text: 'Previous Period <br/> Teacher',
            align: 'center',
            verticalAlign: 'middle',
            y: -70
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
            pie: {
                size: '140%',
                dataLabels: {
                    enabled: true,
                    distance: -50,
                    style: {
                        fontWeight: 'bold',
                        color: 'white',
                        textShadow: '0px 1px 2px black'
                    }
                },
                startAngle: -90,
                endAngle: 90,
                center: ['50%', '114%']
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            type: 'pie',
            name: 'Share',
            innerSize: '50%',
            data: [@Html.Raw(prevTeacher),
                {
                    name: 'There are no previously scheduled surveys available',
                    y: 0.2,
                    dataLabels: {
                        enabled: false
                    }
                }
            ]
        }]
    });



    /* CURRENT PERIOD PARENT */
    $('#currentPeriodParent').highcharts({
        chart: {
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            plotBackgroundColor: null,
            plotBorderWidth: 0,
            plotShadow: false
        },
        colors: colors,
        title: {
            text: 'Current Period <br/> Parent',
            align: 'center',
            verticalAlign: 'middle',
            y: -70
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
            pie: {
                size: '140%',
                dataLabels: {
                    enabled: true,
                    distance: -50,
                    style: {
                        fontWeight: 'bold',
                        color: 'white',
                        textShadow: '0px 1px 2px black'
                    }
                },
                startAngle: -90,
                endAngle: 90,
                center: ['50%', '114%']
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            type: 'pie',
            name: 'Share',
            innerSize: '50%',
            data: [@Html.Raw(currParent)
            ]
        }]
    });


    /* CURRENT PERIOD TEACHER */
    $('#currentPeriodTeacher').highcharts({
        chart: {
            backgroundColor: 'rgba(255, 255, 255, 0.1)',
            plotBackgroundColor: null,
            plotBorderWidth: 0,
            plotShadow: false
        },
        colors: colors,
        title: {
            text: 'Current Period <br/> Teacher',
            align: 'center',
            verticalAlign: 'middle',
            y: -70
        },
        tooltip: {
            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
        },
        plotOptions: {
            pie: {
                size: '140%',
                dataLabels: {
                    enabled: true,
                    distance: -50,
                    style: {
                        fontWeight: 'bold',
                        color: 'white',
                        textShadow: '0px 1px 2px black'
                    }
                },
                startAngle: -90,
                endAngle: 90,
                center: ['50%', '114%']
            }
        },
        credits: {
            enabled: false
        },
        series: [{
            type: 'pie',
            name: 'Share',
            innerSize: '50%',
            data: [@Html.Raw(currTeacher)
            ]
        }]
    });
});
</script>