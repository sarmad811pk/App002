@using SurveyApp.Models;
@using System.Data;

@{
    DataSet dsCompletion;
    int studyId = 0;
    string currParent = "", currTeacher = "", prevParent = "", prevTeacher = "";
    int userType = User.IsInRole("Teacher") == true ? 2 : User.IsInRole("Parent") == true ? 1 : 0;

    dsCompletion = SurveyApp.DataHelper.DashboardGetSchedulesForUserRoles(Model, userType != 0 ? WebSecurity.CurrentUserId : 0);
    studyId = Model == null ? 0 : Convert.ToInt32(Model);


    #region CurrentPrriod
    if (dsCompletion != null && dsCompletion.Tables != null && dsCompletion.Tables.Count >= 1)
    {
        string currentDate = DateTime.Now.ToString("MM/dd/yyyy");
        /* PARENT */
        #region ParentGraph
        if (userType == 0 || userType == 1)
        {
            int completed = 0, partial = 0, notstarted = 0;
            DataRow[] drCount = dsCompletion.Tables[0].Select("'" + currentDate + "'  < ScheduleDate");
            if (drCount.Length > 0)
            {
                foreach (DataRow dr in drCount)
                {
                    if (dr["Percentage"] != DBNull.Value)
                    {
                        int percent = Convert.ToInt32(dr["Percentage"].ToString().Replace("%", ""));
                        if (percent == 100)
                        {
                            completed++;
                        }
                        else if (percent > 0 && percent < 100)
                        {
                            partial++;
                        }
                        else if (percent == 0)
                        {
                            notstarted++;
                        }
                    }
                    else
                    {
                        notstarted++;
                    }
                }
            }
            currParent = "['Completed', " + completed + "], ['Partially Completed', " + partial + "],['Not Started', " + notstarted + "]";
        }
        #endregion

        /* TEACHER */
        #region TeacherGraph
        if (userType == 0 || userType == 2)
        {
            int completedTeacher = 0, partialTeacher = 0, notstartedTeacher = 0;
            DataRow[] drTeacherCount = dsCompletion.Tables[userType == 0 ? 1 : 0].Select("'" + currentDate + "'  < ScheduleDate");
            if (drTeacherCount.Length > 0)
            {
                foreach (DataRow dr in drTeacherCount)
                {
                    if (dr["Percentage"] != DBNull.Value)
                    {
                        int percent = Convert.ToInt32(dr["Percentage"].ToString().Replace("%", ""));
                        if (percent == 100)
                        {
                            completedTeacher++;
                        }
                        else if (percent > 0 && percent < 100)
                        {
                            partialTeacher++;
                        }
                        else if (percent == 0)
                        {
                            notstartedTeacher++;
                        }
                    }
                    else
                    {
                        notstartedTeacher++;
                    }
                }
            }
            currTeacher = "['Completed', " + completedTeacher + "], ['Partially Completed', " + partialTeacher + "],['Not Started', " + notstartedTeacher + "]";
        }
        #endregion
    }
    #endregion

    #region PreviousPrriod
    if (dsCompletion != null && dsCompletion.Tables != null && dsCompletion.Tables.Count >= 1)
    {
        string currentDate = DateTime.Now.ToString("MM/dd/yyyy");
        /* PARENT */
        #region ParentGraph
        if (userType == 0 || userType == 1)
        {
            int completedPrevious = 0, partialPrevious = 0, notstartedPrevious = 0;
            DataRow[] drCount = dsCompletion.Tables[0].Select("'" + currentDate + "' >= ScheduleDate");
            if (drCount.Length > 0)
            {
                foreach (DataRow dr in drCount)
                {
                    if (dr["Percentage"] != DBNull.Value)
                    {
                        int percent = Convert.ToInt32(dr["Percentage"].ToString().Replace("%", ""));
                        if (percent == 100)
                        {
                            completedPrevious++;
                        }
                        else if (percent > 0 && percent < 100)
                        {
                            partialPrevious++;
                        }
                        else if (percent == 0)
                        {
                            notstartedPrevious++;
                        }
                    }
                    else
                    {
                        notstartedPrevious++;
                    }
                }
            }
            prevParent = "['Completed', " + completedPrevious + "], ['Partially Completed', " + partialPrevious + "],['Not Started', " + notstartedPrevious + "]";
        }
        #endregion

        /* TEACHER */
        #region TeacherGraph
        if (userType == 0 || userType == 2)
        {
            int completedTeacherPrevious = 0, partialTeacherPrevious = 0, notstartedTeacherPrevious = 0;
            DataRow[] drTeacherCount = dsCompletion.Tables[userType == 0 ? 1 : 0].Select("'" + currentDate + "' >= ScheduleDate");
            if (drTeacherCount.Length > 0)
            {
                foreach (DataRow dr in drTeacherCount)
                {
                    if (dr["Percentage"] != DBNull.Value)
                    {
                        int percent = Convert.ToInt32(dr["Percentage"].ToString().Replace("%", ""));
                        if (percent == 100)
                        {
                            completedTeacherPrevious++;
                        }
                        else if (percent > 0 && percent < 100)
                        {
                            partialTeacherPrevious++;
                        }
                        else if (percent == 0)
                        {
                            notstartedTeacherPrevious++;
                        }
                    }
                    else
                    {
                        notstartedTeacherPrevious++;
                    }
                }
            }
            prevTeacher = "['Completed', " + completedTeacherPrevious + "], ['Partially Completed', " + partialTeacherPrevious + "],['Not Started', " + notstartedTeacherPrevious + "]";
        }
        #endregion
    }
    #endregion

}


<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>

@if(userType == 0)
{
    <style type="text/css">
        .graphDiv{width: 46%; height: 200px; margin: 0 6px;display: inline-block;}
    </style>
}
else
{
    <style type="text/css">
        .graphDiv{width: 100%; height: 200px; margin: 0 6px;display: inline-block;}
    </style>
}
<style type="text/css">
    .graphInfo{padding: 4px 0px 4px 0px;}
    .graphInfo .tblgraphInfo{margin: 0px auto;}
    .graphInfo .tblgraphInfo td{padding:0px 10px;}
    
</style>

<div class="completion">
    <h3>Survey Completion</h3>
    <div style="border:solid 1px #CCC;">
        <table style="width:@(userType == 0 ? "100%" : "60%");background-color: #FFF;margin: 0px auto;">
            <tr>
                <td style="width: 50%; text-align: right;">
                    @if (userType == 0 || userType == 1)
                    {
                        <div id="previousPeriodParent" class="graphDiv"></div>
                    }
                    @if (userType == 0 || userType == 2)
                    {
                        <div id="previousPeriodTeacher" class="graphDiv"></div>
                    }                    
                </td>
                <td style="width: 50%; text-align: right;">
                    @if (userType == 0 || userType == 1)
                    {
                        <div id="currentPeriodParent" class="graphDiv"></div>
                    }                    
                    @if (userType == 0 || userType == 2)
                    {
                        <div id="currentPeriodTeacher" class="graphDiv"></div>
                    }                    
                </td>
            </tr>
            <tr>
                <td colspan="2" style="width: 100%;">
                    <div class="graphInfo">
                        <table class="tblgraphInfo">
                            <tr>
                                <td style="color:#33B86C;"><i class="ion-checkmark"></i>&nbsp;Completed</td>
                                <td style="color:#286A66;"><i class="ion-android-more-horizontal"></i>&nbsp;Partially Completed</td>
                                <td style="color: #D7524B;"><i class="ion-minus-round"></i>&nbsp;Not Started</td>
                            </tr>
                        </table>                        
                    </div>
                </td>
            </tr>
        </table>
    </div>
    

</div>

<script type="text/javascript">var colors = ['#2AFF7F', '#FFFF7F', '#FF7F2A']; //F46F66</script>
@if (userType == 0 || userType == 1)
{
    <script type="text/javascript">        
    $(function () {            
        /* PREVIOUS PERIOD PARENT */
        $('#previousPeriodParent').highcharts({
            chart: {
                backgroundColor: 'rgba(255, 255, 255, 0.1)',
                plotBackgroundColor: null,
                plotBorderWidth: 0,
                plotShadow: false
            },
            colors: colors,
            title: {
                text: 'Last submited: Parent',
                align: 'center',
                verticalAlign: 'middle',
                y: -70,
                style: { "color": "#333333", "fontSize": "14px" }
                },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    size: '140%',
                    dataLabels: {
                        enabled: false,
                        distance: -50,
                        style: {
                            fontWeight: 'bold',
                            color: 'white',
                            textShadow: '0px 1px 2px black'
                        }
                        },
                    startAngle: -90,
                    endAngle: 90,
                    center: ['50%', '114%']
                }
                },
            credits: {
                enabled: false
            },
            series: [{
                type: 'pie',
                name: 'Share',
                innerSize: '50%',
                data: [@Html.Raw(prevParent),
                    {
                    name: 'There are no previously scheduled surveys available',
                        y: 0.2,
                        dataLabels: {
                        enabled: false
                        }
                    }
                ]
            }]
        });
        });
        </script>
}
@if (userType == 0 || userType == 2)
{
    <script type="text/javascript">
    $(function () {
        /* PREVIOUS PERIOD TEACHER */
        $('#previousPeriodTeacher').highcharts({
            chart: {
                backgroundColor: 'rgba(255, 255, 255, 0.1)',
                plotBackgroundColor: null,
                plotBorderWidth: 0,
                plotShadow: false
            },
            colors: colors,
            title: {
                text: 'Last submited: Teacher',
                align: 'center',
                verticalAlign: 'middle',
                y: -70,
                style: { "color": "#333333", "fontSize": "14px" }
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    size: '140%',
                    dataLabels: {
                        enabled: false,
                        distance: -50,
                        style: {
                            fontWeight: 'bold',
                            color: 'white',
                            textShadow: '0px 1px 2px black'
                        }
                    },
                    startAngle: -90,
                    endAngle: 90,
                    center: ['50%', '114%']
                }
            },
            credits: {
                enabled: false
            },
            series: [{
                type: 'pie',
                name: 'Share',
                innerSize: '50%',
                data: [@Html.Raw(prevTeacher),
                    {
                        name: 'There are no previously scheduled surveys available',
                        y: 0.2,
                        dataLabels: {
                            enabled: false
                        }
                    }
                ]
            }]
        });
    });
    </script>
}
@if (userType == 0 || userType == 1)
{
    <script type="text/javascript">
    $(function () {
        /* CURRENT PERIOD PARENT */
        $('#currentPeriodParent').highcharts({
            chart: {
                backgroundColor: 'rgba(255, 255, 255, 0.1)',
                plotBackgroundColor: null,
                plotBorderWidth: 0,
                plotShadow: false
            },
            colors: colors,
            title: {
                text: 'Currently due: Parent',
                align: 'center',
                verticalAlign: 'middle',
                y: -70,
                style: { "color": "#333333", "fontSize": "14px" }
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    size: '140%',
                    dataLabels: {
                        enabled: false,
                        distance: -50,
                        style: {
                            fontWeight: 'bold',
                            color: 'white',
                            textShadow: '0px 1px 2px black'
                        }
                    },
                    startAngle: -90,
                    endAngle: 90,
                    center: ['50%', '114%']
                }
            },
            credits: {
                enabled: false
            },
            series: [{
                type: 'pie',
                name: 'Share',
                innerSize: '50%',
                data: [@Html.Raw(currParent)
                ]
            }]
        });
    });
    </script>
}
@if (userType == 0 || userType == 2)
{
    <script type="text/javascript">
    $(function () {
        /* CURRENT PERIOD TEACHER */
        $('#currentPeriodTeacher').highcharts({
            chart: {
                backgroundColor: 'rgba(255, 255, 255, 0.1)',
                plotBackgroundColor: null,
                plotBorderWidth: 0,
                plotShadow: false
            },
            colors: colors,
            title: {
                text: 'Currently due: Teacher',
                align: 'center',
                verticalAlign: 'middle',
                y: -70,
                style: { "color": "#333333", "fontSize": "14px" }
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    size: '140%',
                    dataLabels: {
                        enabled: false,
                        distance: -50,
                        style: {
                            fontWeight: 'bold',
                            color: 'white',
                            textShadow: '0px 1px 2px black'
                        }
                    },
                    startAngle: -90,
                    endAngle: 90,
                    center: ['50%', '114%']
                }
            },
            credits: {
                enabled: false
            },
            series: [{
                type: 'pie',
                name: 'Share',
                innerSize: '50%',
                data: [@Html.Raw(currTeacher)
                ]
            }]
        });
    });
    </script>
}






